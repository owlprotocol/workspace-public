/***** Generics for Firebase web CRUD *****/
import { getFirebaseQueryResource } from "./getFirebaseQueryResource.js";
import {
    commitWriteBatch,
    deleteDoc,
    deleteDocTransaction,
    deleteDocWriteBatch,
    exists,
    getColRef,
    getDoc,
    getDocRef,
    getDocTransaction,
    getWriteBatch,
    runTransaction,
    setDoc,
    setDocTransaction,
    setDocWriteBatch,
    updateDoc,
    updateDocTransaction,
    updateDocWriteBatch,
} from "./document.js";
import { getDocs } from "./query.js";
import { getFirebaseResourceForSdk } from "../getFirebaseResource.js";

/**
 * Firebase Resource. create, get, getAll, update, delete, deleteAll and more
 * @template ResourceData Resource data
 * @template ResourceId Resource id params (some params may be optional if can be autogenerated)
 * @template CollectionId Resource collection id  (for use with collection as function)
 * @template ResourceDataInput Resource input data passed to `encodeData`, defaults to ResourceData
 * @template ResourceDataEncoded Resource encoded data passed to `decodeData`, defaults to ResourceData
 * @param firestore Firestore instance
 * @param collection Firestore collection, path (eg. `/users`), or factory function `(collectionId) => collection`
 * @param validators encodeId, encodeDataPartial, encodeParentDocId, decodeId, decodeData, decodeParentDocId
 * @param options Cache options
 * @returns wrapper functions for access Firebase
 */
export const getFirebaseResource = getFirebaseResourceForSdk<"web">({
    getColRef,
    getDocRef,
    getDoc,
    getDocs,
    setDoc,
    updateDoc,
    deleteDoc,
    exists,
    getWriteBatch,
    setDocWriteBatch,
    updateDocWriteBatch,
    deleteDocWriteBatch,
    commitWriteBatch,
    runTransaction,
    getDocTransaction,
    setDocTransaction,
    updateDocTransaction,
    deleteDocTransaction,
    getFirebaseQueryResource,
});
