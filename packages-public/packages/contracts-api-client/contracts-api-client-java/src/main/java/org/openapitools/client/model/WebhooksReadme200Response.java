/*
 * Owl Contract Api
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * WebhooksReadme200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-08-16T18:48:04.561997+03:00[Europe/Istanbul]")
public class WebhooksReadme200Response {
  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_API_KEY = "apiKey";
  @SerializedName(SERIALIZED_NAME_API_KEY)
  private String apiKey;

  public static final String SERIALIZED_NAME_DFNS_ADDRESS = "dfnsAddress";
  @SerializedName(SERIALIZED_NAME_DFNS_ADDRESS)
  private String dfnsAddress;

  public static final String SERIALIZED_NAME_DFNS_ID = "dfnsId";
  @SerializedName(SERIALIZED_NAME_DFNS_ID)
  private String dfnsId;

  public static final String SERIALIZED_NAME_DFNS_STATUS = "dfnsStatus";
  @SerializedName(SERIALIZED_NAME_DFNS_STATUS)
  private String dfnsStatus;

  public static final String SERIALIZED_NAME_GNOSIS_TX_HASH = "gnosisTxHash";
  @SerializedName(SERIALIZED_NAME_GNOSIS_TX_HASH)
  private String gnosisTxHash;

  public static final String SERIALIZED_NAME_GNOSIS_ADDRESS = "gnosisAddress";
  @SerializedName(SERIALIZED_NAME_GNOSIS_ADDRESS)
  private String gnosisAddress;

  public static final String SERIALIZED_NAME_TOPUP_TOTALS = "topupTotals";
  @SerializedName(SERIALIZED_NAME_TOPUP_TOTALS)
  private Object topupTotals = null;

  public static final String SERIALIZED_NAME_AUTHORIZATION = "Authorization";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION)
  private String authorization;

  public WebhooksReadme200Response() {
  }

  public WebhooksReadme200Response email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public WebhooksReadme200Response apiKey(String apiKey) {
    
    this.apiKey = apiKey;
    return this;
  }

   /**
   * Get apiKey
   * @return apiKey
  **/
  @javax.annotation.Nonnull
  public String getApiKey() {
    return apiKey;
  }


  public void setApiKey(String apiKey) {
    this.apiKey = apiKey;
  }


  public WebhooksReadme200Response dfnsAddress(String dfnsAddress) {
    
    this.dfnsAddress = dfnsAddress;
    return this;
  }

   /**
   * Get dfnsAddress
   * @return dfnsAddress
  **/
  @javax.annotation.Nullable
  public String getDfnsAddress() {
    return dfnsAddress;
  }


  public void setDfnsAddress(String dfnsAddress) {
    this.dfnsAddress = dfnsAddress;
  }


  public WebhooksReadme200Response dfnsId(String dfnsId) {
    
    this.dfnsId = dfnsId;
    return this;
  }

   /**
   * Get dfnsId
   * @return dfnsId
  **/
  @javax.annotation.Nullable
  public String getDfnsId() {
    return dfnsId;
  }


  public void setDfnsId(String dfnsId) {
    this.dfnsId = dfnsId;
  }


  public WebhooksReadme200Response dfnsStatus(String dfnsStatus) {
    
    this.dfnsStatus = dfnsStatus;
    return this;
  }

   /**
   * Get dfnsStatus
   * @return dfnsStatus
  **/
  @javax.annotation.Nullable
  public String getDfnsStatus() {
    return dfnsStatus;
  }


  public void setDfnsStatus(String dfnsStatus) {
    this.dfnsStatus = dfnsStatus;
  }


  public WebhooksReadme200Response gnosisTxHash(String gnosisTxHash) {
    
    this.gnosisTxHash = gnosisTxHash;
    return this;
  }

   /**
   * Get gnosisTxHash
   * @return gnosisTxHash
  **/
  @javax.annotation.Nullable
  public String getGnosisTxHash() {
    return gnosisTxHash;
  }


  public void setGnosisTxHash(String gnosisTxHash) {
    this.gnosisTxHash = gnosisTxHash;
  }


  public WebhooksReadme200Response gnosisAddress(String gnosisAddress) {
    
    this.gnosisAddress = gnosisAddress;
    return this;
  }

   /**
   * Get gnosisAddress
   * @return gnosisAddress
  **/
  @javax.annotation.Nullable
  public String getGnosisAddress() {
    return gnosisAddress;
  }


  public void setGnosisAddress(String gnosisAddress) {
    this.gnosisAddress = gnosisAddress;
  }


  public WebhooksReadme200Response topupTotals(Object topupTotals) {
    
    this.topupTotals = topupTotals;
    return this;
  }

   /**
   * Get topupTotals
   * @return topupTotals
  **/
  @javax.annotation.Nullable
  public Object getTopupTotals() {
    return topupTotals;
  }


  public void setTopupTotals(Object topupTotals) {
    this.topupTotals = topupTotals;
  }


  public WebhooksReadme200Response authorization(String authorization) {
    
    this.authorization = authorization;
    return this;
  }

   /**
   * Get authorization
   * @return authorization
  **/
  @javax.annotation.Nonnull
  public String getAuthorization() {
    return authorization;
  }


  public void setAuthorization(String authorization) {
    this.authorization = authorization;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhooksReadme200Response webhooksReadme200Response = (WebhooksReadme200Response) o;
    return Objects.equals(this.email, webhooksReadme200Response.email) &&
        Objects.equals(this.apiKey, webhooksReadme200Response.apiKey) &&
        Objects.equals(this.dfnsAddress, webhooksReadme200Response.dfnsAddress) &&
        Objects.equals(this.dfnsId, webhooksReadme200Response.dfnsId) &&
        Objects.equals(this.dfnsStatus, webhooksReadme200Response.dfnsStatus) &&
        Objects.equals(this.gnosisTxHash, webhooksReadme200Response.gnosisTxHash) &&
        Objects.equals(this.gnosisAddress, webhooksReadme200Response.gnosisAddress) &&
        Objects.equals(this.topupTotals, webhooksReadme200Response.topupTotals) &&
        Objects.equals(this.authorization, webhooksReadme200Response.authorization);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, apiKey, dfnsAddress, dfnsId, dfnsStatus, gnosisTxHash, gnosisAddress, topupTotals, authorization);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhooksReadme200Response {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    apiKey: ").append(toIndentedString(apiKey)).append("\n");
    sb.append("    dfnsAddress: ").append(toIndentedString(dfnsAddress)).append("\n");
    sb.append("    dfnsId: ").append(toIndentedString(dfnsId)).append("\n");
    sb.append("    dfnsStatus: ").append(toIndentedString(dfnsStatus)).append("\n");
    sb.append("    gnosisTxHash: ").append(toIndentedString(gnosisTxHash)).append("\n");
    sb.append("    gnosisAddress: ").append(toIndentedString(gnosisAddress)).append("\n");
    sb.append("    topupTotals: ").append(toIndentedString(topupTotals)).append("\n");
    sb.append("    authorization: ").append(toIndentedString(authorization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("email");
    openapiFields.add("apiKey");
    openapiFields.add("dfnsAddress");
    openapiFields.add("dfnsId");
    openapiFields.add("dfnsStatus");
    openapiFields.add("gnosisTxHash");
    openapiFields.add("gnosisAddress");
    openapiFields.add("topupTotals");
    openapiFields.add("Authorization");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("apiKey");
    openapiRequiredFields.add("Authorization");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WebhooksReadme200Response
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WebhooksReadme200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WebhooksReadme200Response is not found in the empty JSON string", WebhooksReadme200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WebhooksReadme200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WebhooksReadme200Response` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WebhooksReadme200Response.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("apiKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiKey").toString()));
      }
      if ((jsonObj.get("dfnsAddress") != null && !jsonObj.get("dfnsAddress").isJsonNull()) && !jsonObj.get("dfnsAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dfnsAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dfnsAddress").toString()));
      }
      if ((jsonObj.get("dfnsId") != null && !jsonObj.get("dfnsId").isJsonNull()) && !jsonObj.get("dfnsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dfnsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dfnsId").toString()));
      }
      if ((jsonObj.get("dfnsStatus") != null && !jsonObj.get("dfnsStatus").isJsonNull()) && !jsonObj.get("dfnsStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dfnsStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dfnsStatus").toString()));
      }
      if ((jsonObj.get("gnosisTxHash") != null && !jsonObj.get("gnosisTxHash").isJsonNull()) && !jsonObj.get("gnosisTxHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gnosisTxHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gnosisTxHash").toString()));
      }
      if ((jsonObj.get("gnosisAddress") != null && !jsonObj.get("gnosisAddress").isJsonNull()) && !jsonObj.get("gnosisAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gnosisAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gnosisAddress").toString()));
      }
      if (!jsonObj.get("Authorization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Authorization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Authorization").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WebhooksReadme200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WebhooksReadme200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WebhooksReadme200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WebhooksReadme200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<WebhooksReadme200Response>() {
           @Override
           public void write(JsonWriter out, WebhooksReadme200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WebhooksReadme200Response read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WebhooksReadme200Response given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WebhooksReadme200Response
  * @throws IOException if the JSON string is invalid with respect to WebhooksReadme200Response
  */
  public static WebhooksReadme200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WebhooksReadme200Response.class);
  }

 /**
  * Convert an instance of WebhooksReadme200Response to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

