/*
 * Owl Contract Api
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeployBeaconProxyDefaultResponse;
import org.openapitools.client.model.InterfacesIERC721GetApprovedRequest;
import org.openapitools.client.model.InterfacesITokenDnaGetDna200Response;
import org.openapitools.client.model.InterfacesITokenDnaGetDnaBatch200Response;
import org.openapitools.client.model.InterfacesITokenDnaGetDnaBatchRequest;
import org.openapitools.client.model.InterfacesITokenDnaSetDna200Response;
import org.openapitools.client.model.InterfacesITokenDnaSetDnaBatch200Response;
import org.openapitools.client.model.InterfacesITokenDnaSetDnaBatchRequest;
import org.openapitools.client.model.InterfacesITokenDnaSetDnaRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ITokenDnaApi
 */
@Disabled
public class ITokenDnaApiTest {

    private final ITokenDnaApi api = new ITokenDnaApi();

    /**
     * ITokenDna.getDna
     *
     * Read &#x60;getDna(tokenId)&#x60; on an instance of &#x60;ITokenDna&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesITokenDnaGetDnaTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC721GetApprovedRequest interfacesIERC721GetApprovedRequest = null;
        InterfacesITokenDnaGetDna200Response response = api.interfacesITokenDnaGetDna(networkId, address, interfacesIERC721GetApprovedRequest);
        // TODO: test validations
    }

    /**
     * ITokenDna.getDnaBatch
     *
     * Read &#x60;getDnaBatch(tokenId)&#x60; on an instance of &#x60;ITokenDna&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesITokenDnaGetDnaBatchTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesITokenDnaGetDnaBatchRequest interfacesITokenDnaGetDnaBatchRequest = null;
        InterfacesITokenDnaGetDnaBatch200Response response = api.interfacesITokenDnaGetDnaBatch(networkId, address, interfacesITokenDnaGetDnaBatchRequest);
        // TODO: test validations
    }

    /**
     * ITokenDna.setDna
     *
     * Write &#x60;setDna(tokenId,dna)&#x60; on an instance of &#x60;ITokenDna&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesITokenDnaSetDnaTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesITokenDnaSetDnaRequest interfacesITokenDnaSetDnaRequest = null;
        InterfacesITokenDnaSetDna200Response response = api.interfacesITokenDnaSetDna(networkId, address, interfacesITokenDnaSetDnaRequest);
        // TODO: test validations
    }

    /**
     * ITokenDna.setDnaBatch
     *
     * Write &#x60;setDnaBatch(tokenId,dna)&#x60; on an instance of &#x60;ITokenDna&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesITokenDnaSetDnaBatchTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesITokenDnaSetDnaBatchRequest interfacesITokenDnaSetDnaBatchRequest = null;
        InterfacesITokenDnaSetDnaBatch200Response response = api.interfacesITokenDnaSetDnaBatch(networkId, address, interfacesITokenDnaSetDnaBatchRequest);
        // TODO: test validations
    }

}
