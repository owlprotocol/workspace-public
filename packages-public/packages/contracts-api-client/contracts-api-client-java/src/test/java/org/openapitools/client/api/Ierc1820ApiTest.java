/*
 * Owl Contract Api
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeployBeaconProxyDefaultResponse;
import org.openapitools.client.model.InterfacesIERC1820GetInterfaceImplementer200Response;
import org.openapitools.client.model.InterfacesIERC1820GetInterfaceImplementerRequest;
import org.openapitools.client.model.InterfacesIERC1820GetManager200Response;
import org.openapitools.client.model.InterfacesIERC1820GetManagerRequest;
import org.openapitools.client.model.InterfacesIERC1820ImplementsERC165Interface200Response;
import org.openapitools.client.model.InterfacesIERC1820ImplementsERC165InterfaceRequest;
import org.openapitools.client.model.InterfacesIERC1820InterfaceHash200Response;
import org.openapitools.client.model.InterfacesIERC1820InterfaceHashRequest;
import org.openapitools.client.model.InterfacesIERC1820SetInterfaceImplementer200Response;
import org.openapitools.client.model.InterfacesIERC1820SetInterfaceImplementerRequest;
import org.openapitools.client.model.InterfacesIERC1820SetManager200Response;
import org.openapitools.client.model.InterfacesIERC1820SetManagerRequest;
import org.openapitools.client.model.InterfacesIERC1820UpdateERC165Cache200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Ierc1820Api
 */
@Disabled
public class Ierc1820ApiTest {

    private final Ierc1820Api api = new Ierc1820Api();

    /**
     * IERC1820.getInterfaceImplementer
     *
     * Read &#x60;getInterfaceImplementer(account,_interfaceHash)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820GetInterfaceImplementerTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820GetInterfaceImplementerRequest interfacesIERC1820GetInterfaceImplementerRequest = null;
        InterfacesIERC1820GetInterfaceImplementer200Response response = api.interfacesIERC1820GetInterfaceImplementer(networkId, address, interfacesIERC1820GetInterfaceImplementerRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.getManager
     *
     * Read &#x60;getManager(account)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820GetManagerTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820GetManagerRequest interfacesIERC1820GetManagerRequest = null;
        InterfacesIERC1820GetManager200Response response = api.interfacesIERC1820GetManager(networkId, address, interfacesIERC1820GetManagerRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.implementsERC165Interface
     *
     * Read &#x60;implementsERC165Interface(account,interfaceId)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820ImplementsERC165InterfaceTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
        InterfacesIERC1820ImplementsERC165Interface200Response response = api.interfacesIERC1820ImplementsERC165Interface(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.implementsERC165InterfaceNoCache
     *
     * Read &#x60;implementsERC165InterfaceNoCache(account,interfaceId)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820ImplementsERC165InterfaceNoCacheTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
        InterfacesIERC1820ImplementsERC165Interface200Response response = api.interfacesIERC1820ImplementsERC165InterfaceNoCache(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.interfaceHash
     *
     * Read &#x60;interfaceHash(interfaceName)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820InterfaceHashTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820InterfaceHashRequest interfacesIERC1820InterfaceHashRequest = null;
        InterfacesIERC1820InterfaceHash200Response response = api.interfacesIERC1820InterfaceHash(networkId, address, interfacesIERC1820InterfaceHashRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.setInterfaceImplementer
     *
     * Write &#x60;setInterfaceImplementer(account,_interfaceHash,implementer)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820SetInterfaceImplementerTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820SetInterfaceImplementerRequest interfacesIERC1820SetInterfaceImplementerRequest = null;
        InterfacesIERC1820SetInterfaceImplementer200Response response = api.interfacesIERC1820SetInterfaceImplementer(networkId, address, interfacesIERC1820SetInterfaceImplementerRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.setManager
     *
     * Write &#x60;setManager(account,newManager)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820SetManagerTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820SetManagerRequest interfacesIERC1820SetManagerRequest = null;
        InterfacesIERC1820SetManager200Response response = api.interfacesIERC1820SetManager(networkId, address, interfacesIERC1820SetManagerRequest);
        // TODO: test validations
    }

    /**
     * IERC1820.updateERC165Cache
     *
     * Write &#x60;updateERC165Cache(account,interfaceId)&#x60; on an instance of &#x60;IERC1820&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1820UpdateERC165CacheTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
        InterfacesIERC1820UpdateERC165Cache200Response response = api.interfacesIERC1820UpdateERC165Cache(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
        // TODO: test validations
    }

}
