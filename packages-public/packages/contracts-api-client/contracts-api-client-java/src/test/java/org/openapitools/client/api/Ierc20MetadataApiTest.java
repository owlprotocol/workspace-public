/*
 * Owl Contract Api
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeployBeaconProxyDefaultResponse;
import org.openapitools.client.model.InterfacesIBeaconImplementationRequest;
import org.openapitools.client.model.InterfacesIContractURIContractURI200Response;
import org.openapitools.client.model.InterfacesIERC1820GetManagerRequest;
import org.openapitools.client.model.InterfacesIERC20Allowance200Response;
import org.openapitools.client.model.InterfacesIERC20AllowanceRequest;
import org.openapitools.client.model.InterfacesIERC20Approve200Response;
import org.openapitools.client.model.InterfacesIERC20ApproveRequest;
import org.openapitools.client.model.InterfacesIERC20BalanceOf200Response;
import org.openapitools.client.model.InterfacesIERC20MetadataDecimals200Response;
import org.openapitools.client.model.InterfacesIERC20TotalSupply200Response;
import org.openapitools.client.model.InterfacesIERC20Transfer200Response;
import org.openapitools.client.model.InterfacesIERC20TransferFrom200Response;
import org.openapitools.client.model.InterfacesIERC20TransferFromRequest;
import org.openapitools.client.model.InterfacesIERC20TransferRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Ierc20MetadataApi
 */
@Disabled
public class Ierc20MetadataApiTest {

    private final Ierc20MetadataApi api = new Ierc20MetadataApi();

    /**
     * IERC20Metadata.allowance
     *
     * Read &#x60;allowance(owner,spender)&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataAllowanceTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC20AllowanceRequest interfacesIERC20AllowanceRequest = null;
        InterfacesIERC20Allowance200Response response = api.interfacesIERC20MetadataAllowance(networkId, address, interfacesIERC20AllowanceRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.approve
     *
     * Write &#x60;approve(spender,amount)&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataApproveTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC20ApproveRequest interfacesIERC20ApproveRequest = null;
        InterfacesIERC20Approve200Response response = api.interfacesIERC20MetadataApprove(networkId, address, interfacesIERC20ApproveRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.balanceOf
     *
     * Read &#x60;balanceOf(account)&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataBalanceOfTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1820GetManagerRequest interfacesIERC1820GetManagerRequest = null;
        InterfacesIERC20BalanceOf200Response response = api.interfacesIERC20MetadataBalanceOf(networkId, address, interfacesIERC1820GetManagerRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.decimals
     *
     * Read &#x60;decimals()&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataDecimalsTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
        InterfacesIERC20MetadataDecimals200Response response = api.interfacesIERC20MetadataDecimals(networkId, address, interfacesIBeaconImplementationRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.name
     *
     * Read &#x60;name()&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataNameTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
        InterfacesIContractURIContractURI200Response response = api.interfacesIERC20MetadataName(networkId, address, interfacesIBeaconImplementationRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.symbol
     *
     * Read &#x60;symbol()&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataSymbolTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
        InterfacesIContractURIContractURI200Response response = api.interfacesIERC20MetadataSymbol(networkId, address, interfacesIBeaconImplementationRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.totalSupply
     *
     * Read &#x60;totalSupply()&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataTotalSupplyTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
        InterfacesIERC20TotalSupply200Response response = api.interfacesIERC20MetadataTotalSupply(networkId, address, interfacesIBeaconImplementationRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.transfer
     *
     * Write &#x60;transfer(to,amount)&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataTransferTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC20TransferRequest interfacesIERC20TransferRequest = null;
        InterfacesIERC20Transfer200Response response = api.interfacesIERC20MetadataTransfer(networkId, address, interfacesIERC20TransferRequest);
        // TODO: test validations
    }

    /**
     * IERC20Metadata.transferFrom
     *
     * Write &#x60;transferFrom(from,to,amount)&#x60; on an instance of &#x60;IERC20Metadata&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC20MetadataTransferFromTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC20TransferFromRequest interfacesIERC20TransferFromRequest = null;
        InterfacesIERC20TransferFrom200Response response = api.interfacesIERC20MetadataTransferFrom(networkId, address, interfacesIERC20TransferFromRequest);
        // TODO: test validations
    }

}
