/*
 * Owl Contract Api
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DeployBeaconProxyDefaultResponse;
import org.openapitools.client.model.InterfacesIERC1155BalanceOf200Response;
import org.openapitools.client.model.InterfacesIERC1155BalanceOfBatch200Response;
import org.openapitools.client.model.InterfacesIERC1155BalanceOfBatchRequest;
import org.openapitools.client.model.InterfacesIERC1155BalanceOfRequest;
import org.openapitools.client.model.InterfacesIERC1155IsApprovedForAll200Response;
import org.openapitools.client.model.InterfacesIERC1155IsApprovedForAllRequest;
import org.openapitools.client.model.InterfacesIERC1155MetadataURIUri200Response;
import org.openapitools.client.model.InterfacesIERC1155MetadataURIUriRequest;
import org.openapitools.client.model.InterfacesIERC1155SafeBatchTransferFrom200Response;
import org.openapitools.client.model.InterfacesIERC1155SafeBatchTransferFromRequest;
import org.openapitools.client.model.InterfacesIERC1155SafeTransferFrom200Response;
import org.openapitools.client.model.InterfacesIERC1155SafeTransferFromRequest;
import org.openapitools.client.model.InterfacesIERC1155SetApprovalForAll200Response;
import org.openapitools.client.model.InterfacesIERC1155SetApprovalForAllRequest;
import org.openapitools.client.model.InterfacesIERC165SupportsInterface200Response;
import org.openapitools.client.model.InterfacesIERC165SupportsInterfaceRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for Ierc1155MetadataUriApi
 */
@Disabled
public class Ierc1155MetadataUriApiTest {

    private final Ierc1155MetadataUriApi api = new Ierc1155MetadataUriApi();

    /**
     * IERC1155MetadataURI.balanceOf
     *
     * Read &#x60;balanceOf(account,id)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURIBalanceOfTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155BalanceOfRequest interfacesIERC1155BalanceOfRequest = null;
        InterfacesIERC1155BalanceOf200Response response = api.interfacesIERC1155MetadataURIBalanceOf(networkId, address, interfacesIERC1155BalanceOfRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.balanceOfBatch
     *
     * Read &#x60;balanceOfBatch(accounts,ids)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURIBalanceOfBatchTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155BalanceOfBatchRequest interfacesIERC1155BalanceOfBatchRequest = null;
        InterfacesIERC1155BalanceOfBatch200Response response = api.interfacesIERC1155MetadataURIBalanceOfBatch(networkId, address, interfacesIERC1155BalanceOfBatchRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.isApprovedForAll
     *
     * Read &#x60;isApprovedForAll(account,operator)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURIIsApprovedForAllTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155IsApprovedForAllRequest interfacesIERC1155IsApprovedForAllRequest = null;
        InterfacesIERC1155IsApprovedForAll200Response response = api.interfacesIERC1155MetadataURIIsApprovedForAll(networkId, address, interfacesIERC1155IsApprovedForAllRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.safeBatchTransferFrom
     *
     * Write &#x60;safeBatchTransferFrom(from,to,ids,amounts,data)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURISafeBatchTransferFromTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155SafeBatchTransferFromRequest interfacesIERC1155SafeBatchTransferFromRequest = null;
        InterfacesIERC1155SafeBatchTransferFrom200Response response = api.interfacesIERC1155MetadataURISafeBatchTransferFrom(networkId, address, interfacesIERC1155SafeBatchTransferFromRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.safeTransferFrom
     *
     * Write &#x60;safeTransferFrom(from,to,id,amount,data)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURISafeTransferFromTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155SafeTransferFromRequest interfacesIERC1155SafeTransferFromRequest = null;
        InterfacesIERC1155SafeTransferFrom200Response response = api.interfacesIERC1155MetadataURISafeTransferFrom(networkId, address, interfacesIERC1155SafeTransferFromRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.setApprovalForAll
     *
     * Write &#x60;setApprovalForAll(operator,approved)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURISetApprovalForAllTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155SetApprovalForAllRequest interfacesIERC1155SetApprovalForAllRequest = null;
        InterfacesIERC1155SetApprovalForAll200Response response = api.interfacesIERC1155MetadataURISetApprovalForAll(networkId, address, interfacesIERC1155SetApprovalForAllRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.supportsInterface
     *
     * Read &#x60;supportsInterface(interfaceId)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURISupportsInterfaceTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC165SupportsInterfaceRequest interfacesIERC165SupportsInterfaceRequest = null;
        InterfacesIERC165SupportsInterface200Response response = api.interfacesIERC1155MetadataURISupportsInterface(networkId, address, interfacesIERC165SupportsInterfaceRequest);
        // TODO: test validations
    }

    /**
     * IERC1155MetadataURI.uri
     *
     * Read &#x60;uri(id)&#x60; on an instance of &#x60;IERC1155MetadataURI&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interfacesIERC1155MetadataURIUriTest() throws ApiException {
        String networkId = null;
        String address = null;
        InterfacesIERC1155MetadataURIUriRequest interfacesIERC1155MetadataURIUriRequest = null;
        InterfacesIERC1155MetadataURIUri200Response response = api.interfacesIERC1155MetadataURIUri(networkId, address, interfacesIERC1155MetadataURIUriRequest);
        // TODO: test validations
    }

}
