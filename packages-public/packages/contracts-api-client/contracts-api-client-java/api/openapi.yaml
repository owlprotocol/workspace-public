openapi: 3.0.3
info:
  description: Specification for our API focused on contract interactions
  title: Owl Contract Api
  version: 0.0.1
externalDocs:
  url: https://dev.owlprotocol.xyz
servers:
- url: https://17a0-195-175-28-162.ngrok-free.app/api
tags:
- name: contract
- name: deployment
paths:
  /{networkId}/deploy/BeaconProxy:
    post:
      description: Deploys an instance of `BeaconProxy`
      operationId: deploy-BeaconProxy
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_BeaconProxy_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy BeaconProxy
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/UpgradeableBeacon:
    post:
      description: Deploys an instance of `UpgradeableBeacon`
      operationId: deploy-UpgradeableBeacon
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_UpgradeableBeacon_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy UpgradeableBeacon
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ERC20Mintable:
    post:
      description: Deploys an instance of `ERC20Mintable`
      operationId: deploy-ERC20Mintable
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ERC20Mintable_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ERC20Mintable
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ERC721Mintable:
    post:
      description: Deploys an instance of `ERC721Mintable`
      operationId: deploy-ERC721Mintable
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ERC721Mintable_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ERC721Mintable
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ERC721MintableAutoId:
    post:
      description: Deploys an instance of `ERC721MintableAutoId`
      operationId: deploy-ERC721MintableAutoId
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ERC721Mintable_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ERC721MintableAutoId
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ERC1155Mintable:
    post:
      description: Deploys an instance of `ERC1155Mintable`
      operationId: deploy-ERC1155Mintable
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ERC1155Mintable_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ERC1155Mintable
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/TokenURI:
    post:
      description: Deploys an instance of `TokenURI`
      operationId: deploy-TokenURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_TokenURI_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy TokenURI
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/TokenURIBaseURI:
    post:
      description: Deploys an instance of `TokenURIBaseURI`
      operationId: deploy-TokenURIBaseURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_TokenURIBaseURI_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy TokenURIBaseURI
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/TokenURIDna:
    post:
      description: Deploys an instance of `TokenURIDna`
      operationId: deploy-TokenURIDna
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_TokenURIDna_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy TokenURIDna
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ERC2981Setter:
    post:
      description: Deploys an instance of `ERC2981Setter`
      operationId: deploy-ERC2981Setter
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ERC2981Setter_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ERC2981Setter
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/TokenDna:
    post:
      description: Deploys an instance of `TokenDna`
      operationId: deploy-TokenDna
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_TokenDna_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy TokenDna
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/deploy/ChainlinkAnyApiClient:
    post:
      description: Deploys an instance of `ChainlinkAnyApiClient`
      operationId: deploy-ChainlinkAnyApiClient
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              contractParams:
                _admin: 0x434c7df2f06d6cd172a28cb71e2afe6e1b974dbc
            schema:
              $ref: '#/components/schemas/deploy_ChainlinkAnyApiClient_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Deploy ChainlinkAnyApiClient
      tags:
      - Deploy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IBeacon/read/{address}/implementation:
    post:
      description: Read `implementation()` on an instance of `IBeacon`
      operationId: interfaces-IBeacon-implementation
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IBeacon_implementation_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IBeacon.implementation
      tags:
      - IBeacon
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IBeaconProxy/read/{address}/beacon:
    post:
      description: Read `beacon()` on an instance of `IBeaconProxy`
      operationId: interfaces-IBeaconProxy-beacon
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IBeacon_implementation_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IBeaconProxy.beacon
      tags:
      - IBeaconProxy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IBeaconProxy/write/{address}/setBeacon:
    post:
      description: "Write `setBeacon(_beaconAddress,data)` on an instance of `IBeaconProxy`"
      operationId: interfaces-IBeaconProxy-setBeacon
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeaconProxy_setBeacon_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IBeaconProxy_setBeacon_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IBeaconProxy.setBeacon
      tags:
      - IBeaconProxy
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IUpgradeableBeacon/write/{address}/upgradeTo:
    post:
      description: Write `upgradeTo(newImplementation)` on an instance of `IUpgradeableBeacon`
      operationId: interfaces-IUpgradeableBeacon-upgradeTo
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IUpgradeableBeacon_upgradeTo_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IUpgradeableBeacon_upgradeTo_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IUpgradeableBeacon.upgradeTo
      tags:
      - IUpgradeableBeacon
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC165/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC165`
      operationId: interfaces-IERC165-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC165.supportsInterface
      tags:
      - IERC165
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/read/{address}/getInterfaceImplementer:
    post:
      description: "Read `getInterfaceImplementer(account,_interfaceHash)` on an instance\
        \ of `IERC1820`"
      operationId: interfaces-IERC1820-getInterfaceImplementer
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_getInterfaceImplementer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_getInterfaceImplementer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.getInterfaceImplementer
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/read/{address}/getManager:
    post:
      description: Read `getManager(account)` on an instance of `IERC1820`
      operationId: interfaces-IERC1820-getManager
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_getManager_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_getManager_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.getManager
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/read/{address}/implementsERC165Interface:
    post:
      description: "Read `implementsERC165Interface(account,interfaceId)` on an instance\
        \ of `IERC1820`"
      operationId: interfaces-IERC1820-implementsERC165Interface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.implementsERC165Interface
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/read/{address}/implementsERC165InterfaceNoCache:
    post:
      description: "Read `implementsERC165InterfaceNoCache(account,interfaceId)` on\
        \ an instance of `IERC1820`"
      operationId: interfaces-IERC1820-implementsERC165InterfaceNoCache
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.implementsERC165InterfaceNoCache
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/read/{address}/interfaceHash:
    post:
      description: Read `interfaceHash(interfaceName)` on an instance of `IERC1820`
      operationId: interfaces-IERC1820-interfaceHash
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.interfaceHash
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/write/{address}/setInterfaceImplementer:
    post:
      description: "Write `setInterfaceImplementer(account,_interfaceHash,implementer)`\
        \ on an instance of `IERC1820`"
      operationId: interfaces-IERC1820-setInterfaceImplementer
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_setInterfaceImplementer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_setInterfaceImplementer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.setInterfaceImplementer
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/write/{address}/setManager:
    post:
      description: "Write `setManager(account,newManager)` on an instance of `IERC1820`"
      operationId: interfaces-IERC1820-setManager
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_setManager_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_setManager_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.setManager
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1820/write/{address}/updateERC165Cache:
    post:
      description: "Write `updateERC165Cache(account,interfaceId)` on an instance\
        \ of `IERC1820`"
      operationId: interfaces-IERC1820-updateERC165Cache
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1820_updateERC165Cache_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1820.updateERC165Cache
      tags:
      - IERC1820
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IAccessControl/read/{address}/getRoleAdmin:
    post:
      description: Read `getRoleAdmin(role)` on an instance of `IAccessControl`
      operationId: interfaces-IAccessControl-getRoleAdmin
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IAccessControl.getRoleAdmin
      tags:
      - IAccessControl
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IAccessControl/write/{address}/grantRole:
    post:
      description: "Write `grantRole(role,account)` on an instance of `IAccessControl`"
      operationId: interfaces-IAccessControl-grantRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IAccessControl.grantRole
      tags:
      - IAccessControl
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IAccessControl/read/{address}/hasRole:
    post:
      description: "Read `hasRole(role,account)` on an instance of `IAccessControl`"
      operationId: interfaces-IAccessControl-hasRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_hasRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IAccessControl.hasRole
      tags:
      - IAccessControl
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IAccessControl/write/{address}/renounceRole:
    post:
      description: "Write `renounceRole(role,account)` on an instance of `IAccessControl`"
      operationId: interfaces-IAccessControl-renounceRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IAccessControl.renounceRole
      tags:
      - IAccessControl
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IAccessControl/write/{address}/revokeRole:
    post:
      description: "Write `revokeRole(role,account)` on an instance of `IAccessControl`"
      operationId: interfaces-IAccessControl-revokeRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IAccessControl.revokeRole
      tags:
      - IAccessControl
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IContractURI/read/{address}/contractURI:
    post:
      description: Read `contractURI()` on an instance of `IContractURI`
      operationId: interfaces-IContractURI-contractURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IContractURI.contractURI
      tags:
      - IContractURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IContractURI/write/{address}/setContractURI:
    post:
      description: Write `setContractURI(uri)` on an instance of `IContractURI`
      operationId: interfaces-IContractURI-setContractURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IContractURI.setContractURI
      tags:
      - IContractURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/read/{address}/allowance:
    post:
      description: "Read `allowance(owner,spender)` on an instance of `IERC20`"
      operationId: interfaces-IERC20-allowance
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_allowance_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.allowance
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/write/{address}/approve:
    post:
      description: "Write `approve(spender,amount)` on an instance of `IERC20`"
      operationId: interfaces-IERC20-approve
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.approve
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/read/{address}/balanceOf:
    post:
      description: Read `balanceOf(account)` on an instance of `IERC20`
      operationId: interfaces-IERC20-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_getManager_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.balanceOf
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/read/{address}/totalSupply:
    post:
      description: Read `totalSupply()` on an instance of `IERC20`
      operationId: interfaces-IERC20-totalSupply
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_totalSupply_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.totalSupply
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/write/{address}/transfer:
    post:
      description: "Write `transfer(to,amount)` on an instance of `IERC20`"
      operationId: interfaces-IERC20-transfer
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transfer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transfer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.transfer
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20/write/{address}/transferFrom:
    post:
      description: "Write `transferFrom(from,to,amount)` on an instance of `IERC20`"
      operationId: interfaces-IERC20-transferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20.transferFrom
      tags:
      - IERC20
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/allowance:
    post:
      description: "Read `allowance(owner,spender)` on an instance of `IERC20Metadata`"
      operationId: interfaces-IERC20Metadata-allowance
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_allowance_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.allowance
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/write/{address}/approve:
    post:
      description: "Write `approve(spender,amount)` on an instance of `IERC20Metadata`"
      operationId: interfaces-IERC20Metadata-approve
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.approve
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/balanceOf:
    post:
      description: Read `balanceOf(account)` on an instance of `IERC20Metadata`
      operationId: interfaces-IERC20Metadata-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1820_getManager_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.balanceOf
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/decimals:
    post:
      description: Read `decimals()` on an instance of `IERC20Metadata`
      operationId: interfaces-IERC20Metadata-decimals
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20Metadata_decimals_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.decimals
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/name:
    post:
      description: Read `name()` on an instance of `IERC20Metadata`
      operationId: interfaces-IERC20Metadata-name
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.name
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/symbol:
    post:
      description: Read `symbol()` on an instance of `IERC20Metadata`
      operationId: interfaces-IERC20Metadata-symbol
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.symbol
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/read/{address}/totalSupply:
    post:
      description: Read `totalSupply()` on an instance of `IERC20Metadata`
      operationId: interfaces-IERC20Metadata-totalSupply
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_totalSupply_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.totalSupply
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/write/{address}/transfer:
    post:
      description: "Write `transfer(to,amount)` on an instance of `IERC20Metadata`"
      operationId: interfaces-IERC20Metadata-transfer
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transfer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transfer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.transfer
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Metadata/write/{address}/transferFrom:
    post:
      description: "Write `transferFrom(from,to,amount)` on an instance of `IERC20Metadata`"
      operationId: interfaces-IERC20Metadata-transferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Metadata.transferFrom
      tags:
      - IERC20Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC20Mintable/write/{address}/mint:
    post:
      description: "Write `mint(to,amount)` on an instance of `IERC20Mintable`"
      operationId: interfaces-IERC20Mintable-mint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transfer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transfer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC20Mintable.mint
      tags:
      - IERC20Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/write/{address}/approve:
    post:
      description: "Write `approve(to,tokenId)` on an instance of `IERC721`"
      operationId: interfaces-IERC721-approve
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.approve
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/read/{address}/balanceOf:
    post:
      description: Read `balanceOf(owner)` on an instance of `IERC721`
      operationId: interfaces-IERC721-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.balanceOf
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/read/{address}/getApproved:
    post:
      description: Read `getApproved(tokenId)` on an instance of `IERC721`
      operationId: interfaces-IERC721-getApproved
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_getApproved_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.getApproved
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/read/{address}/isApprovedForAll:
    post:
      description: "Read `isApprovedForAll(owner,operator)` on an instance of `IERC721`"
      operationId: interfaces-IERC721-isApprovedForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.isApprovedForAll
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/read/{address}/ownerOf:
    post:
      description: Read `ownerOf(tokenId)` on an instance of `IERC721`
      operationId: interfaces-IERC721-ownerOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_ownerOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.ownerOf
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/write/{address}/safeTransferFrom:
    post:
      description: "Write `safeTransferFrom(from,to,tokenId,data)` on an instance\
        \ of `IERC721`"
      operationId: interfaces-IERC721-safeTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.safeTransferFrom
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/write/{address}/setApprovalForAll:
    post:
      description: "Write `setApprovalForAll(operator,_approved)` on an instance of\
        \ `IERC721`"
      operationId: interfaces-IERC721-setApprovalForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.setApprovalForAll
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC721`
      operationId: interfaces-IERC721-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.supportsInterface
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721/write/{address}/transferFrom:
    post:
      description: "Write `transferFrom(from,to,tokenId)` on an instance of `IERC721`"
      operationId: interfaces-IERC721-transferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_transferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_transferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721.transferFrom
      tags:
      - IERC721
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Mintable/write/{address}/mint:
    post:
      description: "Write `mint(to,tokenId)` on an instance of `IERC721Mintable`"
      operationId: interfaces-IERC721Mintable-mint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Mintable.mint
      tags:
      - IERC721Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Mintable/write/{address}/mintBatch:
    post:
      description: "Write `mintBatch(to,tokenId)` on an instance of `IERC721Mintable`"
      operationId: interfaces-IERC721Mintable-mintBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Mintable.mintBatch
      tags:
      - IERC721Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Mintable/write/{address}/safeMint:
    post:
      description: "Write `safeMint(to,tokenId)` on an instance of `IERC721Mintable`"
      operationId: interfaces-IERC721Mintable-safeMint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Mintable.safeMint
      tags:
      - IERC721Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Mintable/write/{address}/safeMintBatch:
    post:
      description: "Write `safeMintBatch(to,tokenId)` on an instance of `IERC721Mintable`"
      operationId: interfaces-IERC721Mintable-safeMintBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Mintable.safeMintBatch
      tags:
      - IERC721Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/write/{address}/approve:
    post:
      description: "Write `approve(to,tokenId)` on an instance of `IERC721Metadata`"
      operationId: interfaces-IERC721Metadata-approve
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.approve
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/balanceOf:
    post:
      description: Read `balanceOf(owner)` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.balanceOf
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/getApproved:
    post:
      description: Read `getApproved(tokenId)` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-getApproved
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_getApproved_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.getApproved
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/isApprovedForAll:
    post:
      description: "Read `isApprovedForAll(owner,operator)` on an instance of `IERC721Metadata`"
      operationId: interfaces-IERC721Metadata-isApprovedForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.isApprovedForAll
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/name:
    post:
      description: Read `name()` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-name
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.name
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/ownerOf:
    post:
      description: Read `ownerOf(tokenId)` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-ownerOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_ownerOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.ownerOf
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/write/{address}/safeTransferFrom:
    post:
      description: "Write `safeTransferFrom(from,to,tokenId,data)` on an instance\
        \ of `IERC721Metadata`"
      operationId: interfaces-IERC721Metadata-safeTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.safeTransferFrom
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/write/{address}/setApprovalForAll:
    post:
      description: "Write `setApprovalForAll(operator,_approved)` on an instance of\
        \ `IERC721Metadata`"
      operationId: interfaces-IERC721Metadata-setApprovalForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.setApprovalForAll
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.supportsInterface
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/symbol:
    post:
      description: Read `symbol()` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-symbol
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.symbol
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/read/{address}/tokenURI:
    post:
      description: Read `tokenURI(tokenId)` on an instance of `IERC721Metadata`
      operationId: interfaces-IERC721Metadata-tokenURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Metadata_tokenURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.tokenURI
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Metadata/write/{address}/transferFrom:
    post:
      description: "Write `transferFrom(from,to,tokenId)` on an instance of `IERC721Metadata`"
      operationId: interfaces-IERC721Metadata-transferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_transferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_transferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Metadata.transferFrom
      tags:
      - IERC721Metadata
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/write/{address}/approve:
    post:
      description: "Write `approve(to,tokenId)` on an instance of `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-approve
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_approve_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_approve_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.approve
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/balanceOf:
    post:
      description: Read `balanceOf(owner)` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.balanceOf
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/getApproved:
    post:
      description: Read `getApproved(tokenId)` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-getApproved
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_getApproved_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.getApproved
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/isApprovedForAll:
    post:
      description: "Read `isApprovedForAll(owner,operator)` on an instance of `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-isApprovedForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.isApprovedForAll
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/ownerOf:
    post:
      description: Read `ownerOf(tokenId)` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-ownerOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_ownerOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.ownerOf
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/write/{address}/safeTransferFrom:
    post:
      description: "Write `safeTransferFrom(from,to,tokenId,data)` on an instance\
        \ of `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-safeTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.safeTransferFrom
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/write/{address}/setApprovalForAll:
    post:
      description: "Write `setApprovalForAll(operator,_approved)` on an instance of\
        \ `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-setApprovalForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.setApprovalForAll
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.supportsInterface
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/tokenByIndex:
    post:
      description: Read `tokenByIndex(index)` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-tokenByIndex
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenByIndex_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenByIndex_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.tokenByIndex
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/tokenOfOwnerByIndex:
    post:
      description: "Read `tokenOfOwnerByIndex(owner,index)` on an instance of `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-tokenOfOwnerByIndex
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenOfOwnerByIndex_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenOfOwnerByIndex_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.tokenOfOwnerByIndex
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/read/{address}/totalSupply:
    post:
      description: Read `totalSupply()` on an instance of `IERC721Enumerable`
      operationId: interfaces-IERC721Enumerable-totalSupply
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_totalSupply_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.totalSupply
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721Enumerable/write/{address}/transferFrom:
    post:
      description: "Write `transferFrom(from,to,tokenId)` on an instance of `IERC721Enumerable`"
      operationId: interfaces-IERC721Enumerable-transferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_transferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721_transferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721Enumerable.transferFrom
      tags:
      - IERC721Enumerable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721MintableAutoId/write/{address}/mint:
    post:
      description: Write `mint(to)` on an instance of `IERC721MintableAutoId`
      operationId: interfaces-IERC721MintableAutoId-mint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721MintableAutoId.mint
      tags:
      - IERC721MintableAutoId
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721MintableAutoId/write/{address}/mintBatch:
    post:
      description: Write `mintBatch(to)` on an instance of `IERC721MintableAutoId`
      operationId: interfaces-IERC721MintableAutoId-mintBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721MintableAutoId.mintBatch
      tags:
      - IERC721MintableAutoId
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721MintableAutoId/write/{address}/safeMint:
    post:
      description: Write `safeMint(to)` on an instance of `IERC721MintableAutoId`
      operationId: interfaces-IERC721MintableAutoId-safeMint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721MintableAutoId.safeMint
      tags:
      - IERC721MintableAutoId
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC721MintableAutoId/write/{address}/safeMintBatch:
    post:
      description: Write `safeMintBatch(to)` on an instance of `IERC721MintableAutoId`
      operationId: interfaces-IERC721MintableAutoId-safeMintBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC721MintableAutoId.safeMintBatch
      tags:
      - IERC721MintableAutoId
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/read/{address}/balanceOf:
    post:
      description: "Read `balanceOf(account,id)` on an instance of `IERC1155`"
      operationId: interfaces-IERC1155-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.balanceOf
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/read/{address}/balanceOfBatch:
    post:
      description: "Read `balanceOfBatch(accounts,ids)` on an instance of `IERC1155`"
      operationId: interfaces-IERC1155-balanceOfBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.balanceOfBatch
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/read/{address}/isApprovedForAll:
    post:
      description: "Read `isApprovedForAll(account,operator)` on an instance of `IERC1155`"
      operationId: interfaces-IERC1155-isApprovedForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.isApprovedForAll
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/write/{address}/safeBatchTransferFrom:
    post:
      description: "Write `safeBatchTransferFrom(from,to,ids,amounts,data)` on an\
        \ instance of `IERC1155`"
      operationId: interfaces-IERC1155-safeBatchTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.safeBatchTransferFrom
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/write/{address}/safeTransferFrom:
    post:
      description: "Write `safeTransferFrom(from,to,id,amount,data)` on an instance\
        \ of `IERC1155`"
      operationId: interfaces-IERC1155-safeTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.safeTransferFrom
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/write/{address}/setApprovalForAll:
    post:
      description: "Write `setApprovalForAll(operator,approved)` on an instance of\
        \ `IERC1155`"
      operationId: interfaces-IERC1155-setApprovalForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.setApprovalForAll
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC1155`
      operationId: interfaces-IERC1155-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155.supportsInterface
      tags:
      - IERC1155
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/read/{address}/balanceOf:
    post:
      description: "Read `balanceOf(account,id)` on an instance of `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-balanceOf
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.balanceOf
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/read/{address}/balanceOfBatch:
    post:
      description: "Read `balanceOfBatch(accounts,ids)` on an instance of `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-balanceOfBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.balanceOfBatch
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/read/{address}/isApprovedForAll:
    post:
      description: "Read `isApprovedForAll(account,operator)` on an instance of `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-isApprovedForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.isApprovedForAll
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/write/{address}/safeBatchTransferFrom:
    post:
      description: "Write `safeBatchTransferFrom(from,to,ids,amounts,data)` on an\
        \ instance of `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-safeBatchTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.safeBatchTransferFrom
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/write/{address}/safeTransferFrom:
    post:
      description: "Write `safeTransferFrom(from,to,id,amount,data)` on an instance\
        \ of `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-safeTransferFrom
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.safeTransferFrom
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/write/{address}/setApprovalForAll:
    post:
      description: "Write `setApprovalForAll(operator,approved)` on an instance of\
        \ `IERC1155MetadataURI`"
      operationId: interfaces-IERC1155MetadataURI-setApprovalForAll
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.setApprovalForAll
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC1155MetadataURI`
      operationId: interfaces-IERC1155MetadataURI-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.supportsInterface
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155MetadataURI/read/{address}/uri:
    post:
      description: Read `uri(id)` on an instance of `IERC1155MetadataURI`
      operationId: interfaces-IERC1155MetadataURI-uri
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155MetadataURI_uri_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155MetadataURI_uri_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155MetadataURI.uri
      tags:
      - IERC1155MetadataURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155Mintable/write/{address}/mint:
    post:
      description: "Write `mint(to,id,amount,data)` on an instance of `IERC1155Mintable`"
      operationId: interfaces-IERC1155Mintable-mint
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155Mintable_mint_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155Mintable_mint_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155Mintable.mint
      tags:
      - IERC1155Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC1155Mintable/write/{address}/mintBatch:
    post:
      description: "Write `mintBatch(to,ids,amounts,data)` on an instance of `IERC1155Mintable`"
      operationId: interfaces-IERC1155Mintable-mintBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC1155Mintable_mintBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC1155Mintable_mintBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC1155Mintable.mintBatch
      tags:
      - IERC1155Mintable
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenURI/read/{address}/tokenURI:
    post:
      description: Read `tokenURI(tokenId)` on an instance of `ITokenURI`
      operationId: interfaces-ITokenURI-tokenURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC721Metadata_tokenURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenURI.tokenURI
      tags:
      - ITokenURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenURIBaseURI/read/{address}/baseURI:
    post:
      description: Read `baseURI()` on an instance of `ITokenURIBaseURI`
      operationId: interfaces-ITokenURIBaseURI-baseURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenURIBaseURI.baseURI
      tags:
      - ITokenURIBaseURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenURIBaseURI/write/{address}/setTokenURIBaseURI:
    post:
      description: Write `setTokenURIBaseURI(uri)` on an instance of `ITokenURIBaseURI`
      operationId: interfaces-ITokenURIBaseURI-setTokenURIBaseURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenURIBaseURI.setTokenURIBaseURI
      tags:
      - ITokenURIBaseURI
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC2981/read/{address}/royaltyInfo:
    post:
      description: "Read `royaltyInfo(tokenId,salePrice)` on an instance of `IERC2981`"
      operationId: interfaces-IERC2981-royaltyInfo
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC2981_royaltyInfo_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC2981_royaltyInfo_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC2981.royaltyInfo
      tags:
      - IERC2981
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC2981/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IERC2981`
      operationId: interfaces-IERC2981-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC2981.supportsInterface
      tags:
      - IERC2981
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC2981Setter/write/{address}/setDefaultRoyalty:
    post:
      description: "Write `setDefaultRoyalty(receiver,feeNumerator)` on an instance\
        \ of `IERC2981Setter`"
      operationId: interfaces-IERC2981Setter-setDefaultRoyalty
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC2981Setter_setDefaultRoyalty_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC2981Setter_setDefaultRoyalty_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC2981Setter.setDefaultRoyalty
      tags:
      - IERC2981Setter
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IERC2981Setter/write/{address}/setTokenRoyalty:
    post:
      description: "Write `setTokenRoyalty(tokenId,receiver,feeNumerator)` on an instance\
        \ of `IERC2981Setter`"
      operationId: interfaces-IERC2981Setter-setTokenRoyalty
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC2981Setter_setTokenRoyalty_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC2981Setter_setTokenRoyalty_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IERC2981Setter.setTokenRoyalty
      tags:
      - IERC2981Setter
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenDna/read/{address}/getDna:
    post:
      description: Read `getDna(tokenId)` on an instance of `ITokenDna`
      operationId: interfaces-ITokenDna-getDna
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC721_getApproved_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_ITokenDna_getDna_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenDna.getDna
      tags:
      - ITokenDna
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenDna/read/{address}/getDnaBatch:
    post:
      description: Read `getDnaBatch(tokenId)` on an instance of `ITokenDna`
      operationId: interfaces-ITokenDna-getDnaBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_ITokenDna_getDnaBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_ITokenDna_getDnaBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenDna.getDnaBatch
      tags:
      - ITokenDna
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenDna/write/{address}/setDna:
    post:
      description: "Write `setDna(tokenId,dna)` on an instance of `ITokenDna`"
      operationId: interfaces-ITokenDna-setDna
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_ITokenDna_setDna_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_ITokenDna_setDna_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenDna.setDna
      tags:
      - ITokenDna
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/ITokenDna/write/{address}/setDnaBatch:
    post:
      description: "Write `setDnaBatch(tokenId,dna)` on an instance of `ITokenDna`"
      operationId: interfaces-ITokenDna-setDnaBatch
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_ITokenDna_setDnaBatch_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_ITokenDna_setDnaBatch_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: ITokenDna.setDnaBatch
      tags:
      - ITokenDna
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/DEFAULT_ADMIN_ROLE:
    post:
      description: Read `DEFAULT_ADMIN_ROLE()` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-DEFAULT_ADMIN_ROLE
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_DEFAULT_ADMIN_ROLE_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.DEFAULT_ADMIN_ROLE
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/contractURI:
    post:
      description: Read `contractURI()` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-contractURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.contractURI
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/fulfill:
    post:
      description: "Write `fulfill(reqId,reqResponseData)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-fulfill
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_fulfill_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_fulfill_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.fulfill
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/getRoleAdmin:
    post:
      description: Read `getRoleAdmin(role)` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-getRoleAdmin
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.getRoleAdmin
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/grantRole:
    post:
      description: "Write `grantRole(role,account)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-grantRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.grantRole
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/hasRole:
    post:
      description: "Read `hasRole(role,account)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-hasRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_hasRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.hasRole
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/renounceRole:
    post:
      description: "Write `renounceRole(role,account)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-renounceRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.renounceRole
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/request:
    post:
      description: "Write `request(fulfillAddress,fulfillPrefixData,reqJobId,reqUrl,reqPath,reqFee)`\
        \ on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-request
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_request_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_request_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.request
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/requests:
    post:
      description: Read `requests()` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-requests
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_requests_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_requests_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.requests
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/revokeRole:
    post:
      description: "Write `revokeRole(role,account)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-revokeRole
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.revokeRole
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/setContractURI:
    post:
      description: Write `setContractURI(uri)` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-setContractURI
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.setContractURI
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/supportsInterface:
    post:
      description: Read `supportsInterface(interfaceId)` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-supportsInterface
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.supportsInterface
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/read/{address}/version:
    post:
      description: Read `version()` on an instance of `IChainlinkAnyApiClient`
      operationId: interfaces-IChainlinkAnyApiClient-version
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IBeacon_implementation_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.version
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiClient/write/{address}/withdrawLink:
    post:
      description: "Write `withdrawLink(to,amount)` on an instance of `IChainlinkAnyApiClient`"
      operationId: interfaces-IChainlinkAnyApiClient-withdrawLink
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IERC20_transfer_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IERC20_transfer_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiClient.withdrawLink
      tags:
      - IChainlinkAnyApiClient
      x-content-type: application/json
      x-accepts: application/json
  /{networkId}/interface/IChainlinkAnyApiConsumer/write/{address}/fulfill:
    post:
      description: "Write `fulfill(fulfillPrefixData,fulfillResponseData)` on an instance\
        \ of `IChainlinkAnyApiConsumer`"
      operationId: interfaces-IChainlinkAnyApiConsumer-fulfill
      parameters:
      - description: The network id
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          default: "80001"
          pattern: ^\d+$
          type: string
        style: simple
      - description: An ethereum address
        explode: false
        in: path
        name: address
        required: true
        schema:
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/interfaces_IChainlinkAnyApiConsumer_fulfill_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/interfaces_IChainlinkAnyApiConsumer_fulfill_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: IChainlinkAnyApiConsumer.fulfill
      tags:
      - IChainlinkAnyApiConsumer
      x-content-type: application/json
      x-accepts: application/json
  /users/me:
    get:
      description: "Get user info such as email, walletId, credit balance"
      operationId: users-me
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users_me_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Get user info
      tags:
      - Users
      x-accepts: application/json
  /webhooks/readme:
    post:
      description: Readme.io webhook for signups
      operationId: webhooks-readme
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/webhooks_readme_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhooks_readme_200_response'
          description: Successful response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
          description: Error response
      security:
      - Authorization: []
      summary: Signup/Login user with readme.io
      tags:
      - Webhooks
      x-content-type: application/json
      x-accepts: application/json
components:
  responses:
    error:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/deploy_BeaconProxy_default_response'
      description: Error response
  schemas:
    interfaces_IBeacon_implementation_request:
      additionalProperties: false
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
      required:
      - contractParams
      type: object
    interfaces_IBeaconProxy_setBeacon_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          data: data
          _beaconAddress: _beaconAddress
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IBeaconProxy_setBeacon_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IAccessControl_grantRole_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        role: role
        account: account
      properties:
        "0":
          description: A solidity bytes32
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        role:
          description: A solidity bytes32
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC1155_setApprovalForAll_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiClient_DEFAULT_ADMIN_ROLE_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams: "{}"
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
        result:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721MintableAutoId_mintBatch_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0":
          - "0"
          - "0"
          to:
          - to
          - to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC165_supportsInterface_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        interfaceId: interfaceId
      properties:
        "0":
          description: A solidity bytes4
          type: string
        interfaceId:
          description: A solidity bytes4
          type: string
      type: object
    interfaces_IERC1155_balanceOfBatch_200_response_result:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        ? ""
        : - ""
          - ""
      properties:
        "0":
          items:
            description: A solidity uint256
            type: string
          type: array
        ? ""
        : items:
            description: A solidity uint256
            type: string
          type: array
      type: object
    interfaces_ITokenDna_setDna_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_setDna_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiConsumer_fulfill_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        fulfillResponseData: fulfillResponseData
        fulfillPrefixData: fulfillPrefixData
      properties:
        "0":
          description: An arbitrary length byte array
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        fulfillPrefixData:
          description: An arbitrary length byte array
          type: string
        fulfillResponseData:
          description: An arbitrary length byte array
          type: string
      type: object
    deploy_TokenDna_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_TokenDna_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC721_balanceOf_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        owner: owner
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        owner:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_ITokenDna_getDnaBatch_200_response:
      additionalProperties: false
      example:
        result:
          "0":
          - "0"
          - "0"
          ? ""
          : - ""
            - ""
        contractParams:
          "0":
          - "0"
          - "0"
          tokenId:
          - tokenId
          - tokenId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_getDnaBatch_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_ITokenDna_getDnaBatch_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC2981_royaltyInfo_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981_royaltyInfo_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721_safeTransferFrom_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        "3": "3"
        tokenId: tokenId
        data: data
        from: from
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: A solidity uint256
          type: string
        "3":
          description: An arbitrary length byte array
          type: string
        from:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        tokenId:
          description: A solidity uint256
          type: string
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_ITokenDna_getDna_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: An arbitrary length byte array
          type: string
        ? ""
        : description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IERC721MintableAutoId_mintBatch_request_contractParams:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        to:
        - to
        - to
      properties:
        "0":
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
        to:
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
      type: object
    interfaces_IERC20_transfer_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          amount: amount
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_transfer_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_getApproved_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        operator: operator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        operator:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC721_approve_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          tokenId: tokenId
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_approve_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_ITokenDna_setDnaBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_setDnaBatch_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_allowance_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        owner: owner
        "1": "1"
        spender: spender
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        owner:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        spender:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    deploy_BeaconProxy_default_response_issues_inner:
      additionalProperties: false
      properties:
        message:
          type: string
      required:
      - message
      type: object
    interfaces_ITokenDna_setDnaBatch_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0":
          - "0"
          - "0"
          "1":
          - "1"
          - "1"
          tokenId:
          - tokenId
          - tokenId
          dna:
          - dna
          - dna
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_setDnaBatch_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1820_setManager_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_setManager_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiClient_fulfill_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        reqResponseData: reqResponseData
        reqId: reqId
      properties:
        "0":
          description: A solidity bytes32
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        reqId:
          description: A solidity bytes32
          type: string
        reqResponseData:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IERC1155Mintable_mint_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155Mintable_mint_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_transferFrom_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_transferFrom_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_ITokenDna_getDnaBatch_200_response_result:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        ? ""
        : - ""
          - ""
      properties:
        "0":
          items:
            description: An arbitrary length byte array
            type: string
          type: array
        ? ""
        : items:
            description: An arbitrary length byte array
            type: string
          type: array
      type: object
    interfaces_IERC721_setApprovalForAll_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": true
          _approved: true
          operator: operator
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    deploy_UpgradeableBeacon_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        implementation_:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IChainlinkAnyApiConsumer_fulfill_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          fulfillResponseData: fulfillResponseData
          fulfillPrefixData: fulfillPrefixData
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiConsumer_fulfill_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1820_interfaceHash_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        interfaceName: interfaceName
      properties:
        "0":
          description: A string
          type: string
        interfaceName:
          description: A string
          type: string
      type: object
    interfaces_IERC2981_royaltyInfo_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        royaltyAmount: royaltyAmount
        "1": "1"
        receiver: receiver
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        receiver:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        royaltyAmount:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155MetadataURI_uri_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          id: id
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155MetadataURI_uri_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IChainlinkAnyApiClient_request_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        "3": "3"
        "4": "4"
        reqFee: reqFee
        "5": "5"
        fulfillPrefixData: fulfillPrefixData
        fulfillAddress: fulfillAddress
        reqUrl: reqUrl
        reqPath: reqPath
        reqJobId: reqJobId
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        "2":
          description: A solidity bytes32
          type: string
        "3":
          description: A string
          type: string
        "4":
          description: A string
          type: string
        "5":
          description: A solidity uint256
          type: string
        fulfillAddress:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        fulfillPrefixData:
          description: An arbitrary length byte array
          type: string
        reqJobId:
          description: A solidity bytes32
          type: string
        reqUrl:
          description: A string
          type: string
        reqPath:
          description: A string
          type: string
        reqFee:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC20_allowance_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: A solidity uint256
          type: string
        ? ""
        : description: A solidity uint256
          type: string
      type: object
    interfaces_IBeaconProxy_setBeacon_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IBeaconProxy_setBeacon_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155Mintable_mintBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155Mintable_mintBatch_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_ERC721Mintable_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_ERC721Mintable_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC20_totalSupply_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams: "{}"
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721_setApprovalForAll_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": true
        _approved: true
        operator: operator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An solidity boolean
          type: boolean
        operator:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _approved:
          description: An solidity boolean
          type: boolean
      type: object
    interfaces_IERC2981_royaltyInfo_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        tokenId: tokenId
        salePrice: salePrice
      properties:
        "0":
          description: A solidity uint256
          type: string
        "1":
          description: A solidity uint256
          type: string
        tokenId:
          description: A solidity uint256
          type: string
        salePrice:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC721_getApproved_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          operator: operator
        contractParams:
          "0": "0"
          tokenId: tokenId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_200_response_result'
      required:
      - contractParams
      - result
      type: object
    deploy_ERC1155Mintable_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_ERC1155Mintable_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC1155MetadataURI_uri_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155MetadataURI_uri_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_UpgradeableBeacon_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_UpgradeableBeacon_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    deploy_ERC721Mintable_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: A string
          type: string
        "3":
          description: A string
          type: string
        "4":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "5":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _initContractURI:
          description: A string
          type: string
        _name:
          description: A string
          type: string
        _symbol:
          description: A string
          type: string
        _tokenUriProvider:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _tokenRoyaltyProvider:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    deploy_TokenURIBaseURI_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: A string
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _contractUri:
          description: A string
          type: string
        _baseUriRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _baseUri:
          description: A string
          type: string
      type: object
    interfaces_IERC721Metadata_tokenURI_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          tokenId: tokenId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1820_setManager_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        newManager: newManager
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        newManager:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC721MintableAutoId_mint_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1155_safeBatchTransferFrom_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2":
          - "2"
          - "2"
          "3":
          - "3"
          - "3"
          "4": "4"
          amounts:
          - amounts
          - amounts
          data: data
          ids:
          - ids
          - ids
          from: from
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    deploy_TokenDna_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _contractUri:
          description: A string
          type: string
        _dnaRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IChainlinkAnyApiClient_fulfill_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          reqResponseData: reqResponseData
          reqId: reqId
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_fulfill_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_ownerOf_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          owner: owner
        contractParams:
          "0": "0"
          tokenId: tokenId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request_contractParams'
      required:
      - contractParams
      - result
      type: object
    deploy_TokenURI_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: A string
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _contractUri:
          description: A string
          type: string
        _uriRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _uri:
          description: A string
          type: string
      type: object
    interfaces_IChainlinkAnyApiClient_request_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          "3": "3"
          "4": "4"
          reqFee: reqFee
          "5": "5"
          fulfillPrefixData: fulfillPrefixData
          fulfillAddress: fulfillAddress
          reqUrl: reqUrl
          reqPath: reqPath
          reqJobId: reqJobId
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_request_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IUpgradeableBeacon_upgradeTo_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          newImplementation: newImplementation
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IUpgradeableBeacon_upgradeTo_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1155_safeTransferFrom_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721_transferFrom_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_transferFrom_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiClient_requests_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        fulfillPrefixData: fulfillPrefixData
        fulfillAddress: fulfillAddress
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        fulfillAddress:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        fulfillPrefixData:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IERC20_transfer_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        amount: amount
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        amount:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC721Enumerable_tokenOfOwnerByIndex_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          owner: owner
          "1": "1"
          index: index
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenOfOwnerByIndex_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IAccessControl_grantRole_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          role: role
          account: account
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    deploy_ChainlinkAnyApiClient_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_ChainlinkAnyApiClient_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC2981_royaltyInfo_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          royaltyAmount: royaltyAmount
          "1": "1"
          receiver: receiver
        contractParams:
          "0": "0"
          "1": "1"
          tokenId: tokenId
          salePrice: salePrice
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981_royaltyInfo_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC2981_royaltyInfo_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC2981Setter_setTokenRoyalty_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          tokenId: tokenId
          receiver: receiver
          feeNumerator: feeNumerator
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981Setter_setTokenRoyalty_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    webhooks_readme_200_response:
      additionalProperties: false
      example:
        Authorization: Authorization
        gnosisAddress: gnosisAddress
        apiKey: apiKey
        dfnsId: dfnsId
        gnosisTxHash: gnosisTxHash
        topupTotals: ""
        dfnsAddress: dfnsAddress
        dfnsStatus: dfnsStatus
        email: email
      properties:
        email:
          type: string
        apiKey:
          type: string
        dfnsAddress:
          type: string
        dfnsId:
          type: string
        dfnsStatus:
          type: string
        gnosisTxHash:
          type: string
        gnosisAddress:
          type: string
        topupTotals: {}
        Authorization:
          type: string
      required:
      - Authorization
      - apiKey
      - email
      type: object
    interfaces_IContractURI_setContractURI_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_TokenURIDna_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: A string
          type: string
        "4":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "5":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _contractUri:
          description: A string
          type: string
        _baseUriRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _baseUri:
          description: A string
          type: string
        _dnaProviderRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _dnaProvider:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    webhooks_readme_request:
      additionalProperties: false
      properties:
        email:
          type: string
      required:
      - email
      type: object
    interfaces_IERC1820_getManager_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC1820_interfaceHash_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721Enumerable_tokenByIndex_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        index: index
      properties:
        "0":
          description: A solidity uint256
          type: string
        index:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155_safeTransferFrom_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          amount: amount
          "3": "3"
          "4": "4"
          data: data
          from: from
          to: to
          id: id
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_safeTransferFrom_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_approve_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_approve_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1820_setInterfaceImplementer_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        _interfaceHash: _interfaceHash
        implementer: implementer
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity bytes32
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _interfaceHash:
          description: A solidity bytes32
          type: string
        implementer:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_ITokenDna_getDnaBatch_request_contractParams:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        tokenId:
        - tokenId
        - tokenId
      properties:
        "0":
          items:
            description: A solidity uint256
            type: string
          type: array
        tokenId:
          items:
            description: A solidity uint256
            type: string
          type: array
      type: object
    interfaces_IAccessControl_getRoleAdmin_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          role: role
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC165_supportsInterface_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_transferFrom_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          amount: amount
          from: from
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_transferFrom_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_transferFrom_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        tokenId: tokenId
        from: from
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: A solidity uint256
          type: string
        from:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        tokenId:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IAccessControl_grantRole_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155_safeBatchTransferFrom_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_safeBatchTransferFrom_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_TokenURIBaseURI_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_TokenURIBaseURI_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_ITokenDna_getDna_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          tokenId: tokenId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_ITokenDna_getDna_200_response_result'
      required:
      - contractParams
      - result
      type: object
    deploy_ERC20Mintable_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: A string
          type: string
        "3":
          description: A string
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _initContractURI:
          description: A string
          type: string
        _name:
          description: A string
          type: string
        _symbol:
          description: A string
          type: string
      type: object
    interfaces_IERC721Mintable_mintBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1820_getInterfaceImplementer_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          "1": "1"
          _interfaceHash: _interfaceHash
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_getInterfaceImplementer_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IBeacon_implementation_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1820_implementsERC165Interface_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155_isApprovedForAll_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        account: account
        operator: operator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        operator:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IChainlinkAnyApiConsumer_fulfill_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiConsumer_fulfill_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_approve_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        amount: amount
        spender: spender
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        spender:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        amount:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC721_isApprovedForAll_200_response:
      additionalProperties: false
      example:
        result:
          "0": true
          ? ""
          : true
        contractParams:
          "0": "0"
          owner: owner
          "1": "1"
          operator: operator
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC2981Setter_setDefaultRoyalty_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          receiver: receiver
          feeNumerator: feeNumerator
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981Setter_setDefaultRoyalty_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1820_getManager_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_getManager_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IContractURI_setContractURI_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        uri: uri
      properties:
        "0":
          description: A string
          type: string
        uri:
          description: A string
          type: string
      type: object
    users_me_200_response:
      additionalProperties: false
      example:
        gnosisAddress: gnosisAddress
        apiKey: apiKey
        dfnsId: dfnsId
        gnosisTxHash: gnosisTxHash
        topupTotals: ""
        dfnsAddress: dfnsAddress
        dfnsStatus: dfnsStatus
        email: email
      properties:
        email:
          type: string
        apiKey:
          type: string
        dfnsAddress:
          type: string
        dfnsId:
          type: string
        dfnsStatus:
          type: string
        gnosisTxHash:
          type: string
        gnosisAddress:
          type: string
        topupTotals: {}
      required:
      - apiKey
      - email
      type: object
    interfaces_IERC1155_balanceOf_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        id: id
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        id:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IBeacon_implementation_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        ? ""
        : description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC721_transferFrom_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          tokenId: tokenId
          from: from
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_transferFrom_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721MintableAutoId_mint_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_ITokenDna_setDna_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        tokenId: tokenId
        dna: dna
      properties:
        "0":
          description: A solidity uint256
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        tokenId:
          description: A solidity uint256
          type: string
        dna:
          description: An arbitrary length byte array
          type: string
      type: object
    deploy_ERC2981Setter_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_ERC2981Setter_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    deploy_BeaconProxy_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC1820_getInterfaceImplementer_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        _interfaceHash: _interfaceHash
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity bytes32
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _interfaceHash:
          description: A solidity bytes32
          type: string
      type: object
    interfaces_IERC1155_balanceOf_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          "1": "1"
          id: id
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721Mintable_mintBatch_request_contractParams:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        "1":
        - "1"
        - "1"
        tokenId:
        - tokenId
        - tokenId
        to:
        - to
        - to
      properties:
        "0":
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
        "1":
          items:
            description: A solidity uint256
            type: string
          type: array
        to:
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
        tokenId:
          items:
            description: A solidity uint256
            type: string
          type: array
      type: object
    interfaces_IERC1155_balanceOfBatch_200_response:
      additionalProperties: false
      example:
        result:
          "0":
          - "0"
          - "0"
          ? ""
          : - ""
            - ""
        contractParams:
          "0":
          - "0"
          - "0"
          "1":
          - "1"
          - "1"
          ids:
          - ids
          - ids
          accounts:
          - accounts
          - accounts
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721Enumerable_tokenOfOwnerByIndex_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenOfOwnerByIndex_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_ITokenDna_getDnaBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_getDnaBatch_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_ChainlinkAnyApiClient_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _initContractURI:
          description: A string
          type: string
        token:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        oracle:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC165_supportsInterface_200_response_result:
      additionalProperties: false
      example:
        "0": true
        ? ""
        : true
      properties:
        "0":
          description: An solidity boolean
          type: boolean
        ? ""
        : description: An solidity boolean
          type: boolean
      type: object
    interfaces_IERC1155Mintable_mintBatch_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1":
        - "1"
        - "1"
        "2":
        - "2"
        - "2"
        "3": "3"
        amounts:
        - amounts
        - amounts
        data: data
        ids:
        - ids
        - ids
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          items:
            description: A solidity uint256
            type: string
          type: array
        "2":
          items:
            description: A solidity uint256
            type: string
          type: array
        "3":
          description: An arbitrary length byte array
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        ids:
          items:
            description: A solidity uint256
            type: string
          type: array
        amounts:
          items:
            description: A solidity uint256
            type: string
          type: array
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    deploy_BeaconProxy_request_deployParams:
      additionalProperties: false
      properties:
        msgSender:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        salt:
          default: 0x1
          description: "Salt parameter string to deploy different contracts with identical\
            \ parameteres (default: 1)"
          type: string
        deploymentMethod:
          enum:
          - DETERMINISTIC
          - ERC1167
          - BEACON_OWL
          - BEACON_EXISTING
          - BEACON_NEW
          type: string
        beaconAddress:
          description: "The address of the beacon, if used in the deployment method"
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        beaonAdmin:
          description: "The admin address of the beacon, if a new beacon is deployed"
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      required:
      - deploymentMethod
      type: object
    interfaces_IERC20_transferFrom_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        amount: amount
        from: from
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: A solidity uint256
          type: string
        from:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        amount:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155_isApprovedForAll_200_response:
      additionalProperties: false
      example:
        result:
          "0": true
          ? ""
          : true
        contractParams:
          "0": "0"
          "1": "1"
          account: account
          operator: operator
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC2981Setter_setDefaultRoyalty_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        receiver: receiver
        feeNumerator: feeNumerator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint96
          type: string
        receiver:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        feeNumerator:
          description: A solidity uint96
          type: string
      type: object
    interfaces_IUpgradeableBeacon_upgradeTo_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IUpgradeableBeacon_upgradeTo_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155_setApprovalForAll_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": true
          approved: true
          operator: operator
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_setApprovalForAll_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC20_balanceOf_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_getManager_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721Enumerable_tokenByIndex_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          index: index
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenByIndex_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721Enumerable_tokenOfOwnerByIndex_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        owner: owner
        "1": "1"
        index: index
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        owner:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        index:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155_balanceOf_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_balanceOf_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1820_interfaceHash_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: A solidity bytes32
          type: string
        ? ""
        : description: A solidity bytes32
          type: string
      type: object
    interfaces_IAccessControl_hasRole_200_response:
      additionalProperties: false
      example:
        result:
          "0": true
          ? ""
          : true
        contractParams:
          "0": "0"
          "1": "1"
          role: role
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IAccessControl_grantRole_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1820_setManager_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          newManager: newManager
          account: account
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_setManager_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC20Metadata_decimals_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams: "{}"
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
        result:
          $ref: '#/components/schemas/interfaces_IERC20Metadata_decimals_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1820_implementsERC165Interface_200_response:
      additionalProperties: false
      example:
        result:
          "0": true
          ? ""
          : true
        contractParams:
          "0": "0"
          "1": "1"
          interfaceId: interfaceId
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1820_setInterfaceImplementer_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          _interfaceHash: _interfaceHash
          implementer: implementer
          account: account
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_setInterfaceImplementer_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1820_updateERC165Cache_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          interfaceId: interfaceId
          account: account
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_implementsERC165Interface_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721MintableAutoId_mintBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mintBatch_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_ERC2981Setter_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "4":
          description: A solidity uint96
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _contractUri:
          description: A string
          type: string
        _royaltyRole:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _royaltyReceiver:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _feeNumerator:
          description: A solidity uint96
          type: string
      type: object
    interfaces_IERC1155_balanceOfBatch_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_balanceOfBatch_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1820_getInterfaceImplementer_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_getInterfaceImplementer_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_approve_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          amount: amount
          spender: spender
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_approve_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IChainlinkAnyApiClient_request_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_request_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155Mintable_mintBatch_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1":
          - "1"
          - "1"
          "2":
          - "2"
          - "2"
          "3": "3"
          amounts:
          - amounts
          - amounts
          data: data
          ids:
          - ids
          - ids
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155Mintable_mintBatch_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721MintableAutoId_mint_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721MintableAutoId_mint_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_approve_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_approve_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721_safeTransferFrom_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          "3": "3"
          tokenId: tokenId
          data: data
          from: from
          to: to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_getApproved_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_getApproved_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721_safeTransferFrom_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_safeTransferFrom_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC2981Setter_setTokenRoyalty_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        tokenId: tokenId
        receiver: receiver
        feeNumerator: feeNumerator
      properties:
        "0":
          description: A solidity uint256
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: A solidity uint96
          type: string
        tokenId:
          description: A solidity uint256
          type: string
        receiver:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        feeNumerator:
          description: A solidity uint96
          type: string
      type: object
    interfaces_IERC721_getApproved_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        tokenId: tokenId
      properties:
        "0":
          description: A solidity uint256
          type: string
        tokenId:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155Mintable_mint_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          "2": "2"
          amount: amount
          "3": "3"
          data: data
          to: to
          id: id
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155Mintable_mint_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    deploy_TokenURIDna_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_TokenURIDna_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC1820_setInterfaceImplementer_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_setInterfaceImplementer_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiClient_fulfill_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_fulfill_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_BeaconProxy_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: An arbitrary length byte array
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _beaconAddress:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IContractURI_setContractURI_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          uri: uri
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IContractURI_setContractURI_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC1155_isApprovedForAll_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1155_isApprovedForAll_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IAccessControl_getRoleAdmin_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IAccessControl_getRoleAdmin_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1820_getManager_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          account: account
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_getManager_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IBeacon_implementation_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC20_allowance_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC721_approve_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        tokenId: tokenId
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        tokenId:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC721Enumerable_tokenByIndex_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Enumerable_tokenByIndex_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC20_transfer_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_transfer_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC2981Setter_setTokenRoyalty_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981Setter_setTokenRoyalty_request_contractParams'
      required:
      - contractParams
      type: object
    deploy_BeaconProxy_default_response:
      additionalProperties: false
      properties:
        message:
          type: string
        code:
          type: string
        issues:
          items:
            $ref: '#/components/schemas/deploy_BeaconProxy_default_response_issues_inner'
          type: array
      required:
      - code
      - message
      type: object
    interfaces_IERC721Mintable_mintBatch_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0":
          - "0"
          - "0"
          "1":
          - "1"
          - "1"
          tokenId:
          - tokenId
          - tokenId
          to:
          - to
          - to
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721Mintable_mintBatch_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_balanceOf_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          balance: balance
        contractParams:
          "0": "0"
          owner: owner
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC721_balanceOf_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1155_setApprovalForAll_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": true
        approved: true
        operator: operator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An solidity boolean
          type: boolean
        operator:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        approved:
          description: An solidity boolean
          type: boolean
      type: object
    interfaces_IAccessControl_getRoleAdmin_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        role: role
      properties:
        "0":
          description: A solidity bytes32
          type: string
        role:
          description: A solidity bytes32
          type: string
      type: object
    interfaces_IBeaconProxy_setBeacon_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        data: data
        _beaconAddress: _beaconAddress
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An arbitrary length byte array
          type: string
        _beaconAddress:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IERC1820_interfaceHash_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          interfaceName: interfaceName
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IChainlinkAnyApiClient_requests_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          "1": "1"
          fulfillPrefixData: fulfillPrefixData
          fulfillAddress: fulfillAddress
        contractParams:
          "0": "0"
          ? ""
          : ""
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response_result'
        result:
          $ref: '#/components/schemas/interfaces_IChainlinkAnyApiClient_requests_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC1155MetadataURI_uri_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        id: id
      properties:
        "0":
          description: A solidity uint256
          type: string
        id:
          description: A solidity uint256
          type: string
      type: object
    interfaces_IERC1155_balanceOfBatch_request_contractParams:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        "1":
        - "1"
        - "1"
        ids:
        - ids
        - ids
        accounts:
        - accounts
        - accounts
      properties:
        "0":
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
        "1":
          items:
            description: A solidity uint256
            type: string
          type: array
        accounts:
          items:
            description: An ethereum address
            pattern: "0x([a-fA-F0-9]){40}"
            type: string
          type: array
        ids:
          items:
            description: A solidity uint256
            type: string
          type: array
      type: object
    deploy_TokenURI_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_TokenURI_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IERC1820_implementsERC165Interface_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        interfaceId: interfaceId
        account: account
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity bytes4
          type: string
        account:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        interfaceId:
          description: A solidity bytes4
          type: string
      type: object
    interfaces_ITokenDna_setDnaBatch_request_contractParams:
      additionalProperties: false
      example:
        "0":
        - "0"
        - "0"
        "1":
        - "1"
        - "1"
        tokenId:
        - tokenId
        - tokenId
        dna:
        - dna
        - dna
      properties:
        "0":
          items:
            description: A solidity uint256
            type: string
          type: array
        "1":
          items:
            description: An arbitrary length byte array
            type: string
          type: array
        tokenId:
          items:
            description: A solidity uint256
            type: string
          type: array
        dna:
          items:
            description: An arbitrary length byte array
            type: string
          type: array
      type: object
    deploy_ERC1155Mintable_request_contractParams:
      additionalProperties: false
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A string
          type: string
        "2":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "3":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _admin:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _initContractURI:
          description: A string
          type: string
        _tokenUriProvider:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        _tokenRoyaltyProvider:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC2981Setter_setDefaultRoyalty_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC2981Setter_setDefaultRoyalty_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_ITokenDna_setDna_200_response:
      additionalProperties: false
      example:
        contractParams:
          "0": "0"
          "1": "1"
          tokenId: tokenId
          dna: dna
        txHash: txHash
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_ITokenDna_setDna_request_contractParams'
        txHash:
          type: string
      required:
      - contractParams
      - txHash
      type: object
    interfaces_IERC721_isApprovedForAll_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_isApprovedForAll_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IChainlinkAnyApiClient_requests_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC1820_interfaceHash_200_response_result'
      required:
      - contractParams
      type: object
    interfaces_IERC1155Mintable_mint_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        amount: amount
        "3": "3"
        data: data
        to: to
        id: id
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: A solidity uint256
          type: string
        "2":
          description: A solidity uint256
          type: string
        "3":
          description: An arbitrary length byte array
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        id:
          description: A solidity uint256
          type: string
        amount:
          description: A solidity uint256
          type: string
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IERC20Metadata_decimals_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: A solidity uint8
          type: string
        ? ""
        : description: A solidity uint8
          type: string
      type: object
    interfaces_IERC721_setApprovalForAll_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_setApprovalForAll_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IERC1155_safeBatchTransferFrom_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2":
        - "2"
        - "2"
        "3":
        - "3"
        - "3"
        "4": "4"
        amounts:
        - amounts
        - amounts
        data: data
        ids:
        - ids
        - ids
        from: from
        to: to
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          items:
            description: A solidity uint256
            type: string
          type: array
        "3":
          items:
            description: A solidity uint256
            type: string
          type: array
        "4":
          description: An arbitrary length byte array
          type: string
        from:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        ids:
          items:
            description: A solidity uint256
            type: string
          type: array
        amounts:
          items:
            description: A solidity uint256
            type: string
          type: array
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    interfaces_IUpgradeableBeacon_upgradeTo_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        newImplementation: newImplementation
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        newImplementation:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IERC1155_safeTransferFrom_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        "1": "1"
        "2": "2"
        amount: amount
        "3": "3"
        "4": "4"
        data: data
        from: from
        to: to
        id: id
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "2":
          description: A solidity uint256
          type: string
        "3":
          description: A solidity uint256
          type: string
        "4":
          description: An arbitrary length byte array
          type: string
        from:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        to:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        id:
          description: A solidity uint256
          type: string
        amount:
          description: A solidity uint256
          type: string
        data:
          description: An arbitrary length byte array
          type: string
      type: object
    deploy_ERC20Mintable_request:
      additionalProperties: false
      properties:
        deployParams:
          $ref: '#/components/schemas/deploy_BeaconProxy_request_deployParams'
        contractParams:
          $ref: '#/components/schemas/deploy_ERC20Mintable_request_contractParams'
      required:
      - contractParams
      - deployParams
      type: object
    interfaces_IContractURI_contractURI_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams: "{}"
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
        result:
          $ref: '#/components/schemas/interfaces_IContractURI_contractURI_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721_isApprovedForAll_request_contractParams:
      additionalProperties: false
      example:
        "0": "0"
        owner: owner
        "1": "1"
        operator: operator
      properties:
        "0":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        "1":
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        owner:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
        operator:
          description: An ethereum address
          pattern: "0x([a-fA-F0-9]){40}"
          type: string
      type: object
    interfaces_IContractURI_contractURI_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        ? ""
        : ""
      properties:
        "0":
          description: A string
          type: string
        ? ""
        : description: A string
          type: string
      type: object
    interfaces_IERC165_supportsInterface_200_response:
      additionalProperties: false
      example:
        result:
          "0": true
          ? ""
          : true
        contractParams:
          "0": "0"
          interfaceId: interfaceId
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC165_supportsInterface_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721_balanceOf_request:
      additionalProperties: false
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC721_balanceOf_request_contractParams'
      required:
      - contractParams
      type: object
    interfaces_IBeacon_implementation_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams: "{}"
      properties:
        contractParams:
          additionalProperties: false
          properties: {}
          type: object
        result:
          $ref: '#/components/schemas/interfaces_IBeacon_implementation_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC20_allowance_200_response:
      additionalProperties: false
      example:
        result:
          "0": "0"
          ? ""
          : ""
        contractParams:
          "0": "0"
          owner: owner
          "1": "1"
          spender: spender
      properties:
        contractParams:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_request_contractParams'
        result:
          $ref: '#/components/schemas/interfaces_IERC20_allowance_200_response_result'
      required:
      - contractParams
      - result
      type: object
    interfaces_IERC721_balanceOf_200_response_result:
      additionalProperties: false
      example:
        "0": "0"
        balance: balance
      properties:
        "0":
          description: A solidity uint256
          type: string
        balance:
          description: A solidity uint256
          type: string
      type: object
  securitySchemes:
    Authorization:
      in: header
      name: x-api-key
      type: apiKey

