/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using OpenAPIClientUtils = Org.OpenAPITools.Client.ClientUtils;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// InterfacesIChainlinkAnyApiClientRequestRequestContractParams
    /// </summary>
    [DataContract(Name = "interfaces_IChainlinkAnyApiClient_request_request_contractParams")]
    public partial class InterfacesIChainlinkAnyApiClientRequestRequestContractParams : IEquatable<InterfacesIChainlinkAnyApiClientRequestRequestContractParams>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InterfacesIChainlinkAnyApiClientRequestRequestContractParams" /> class.
        /// </summary>
        /// <param name="_0">An ethereum address.</param>
        /// <param name="_1">An arbitrary length byte array.</param>
        /// <param name="_2">A solidity bytes32.</param>
        /// <param name="_3">A string.</param>
        /// <param name="_4">A string.</param>
        /// <param name="_5">A solidity uint256.</param>
        /// <param name="fulfillAddress">An ethereum address.</param>
        /// <param name="fulfillPrefixData">An arbitrary length byte array.</param>
        /// <param name="reqJobId">A solidity bytes32.</param>
        /// <param name="reqUrl">A string.</param>
        /// <param name="reqPath">A string.</param>
        /// <param name="reqFee">A solidity uint256.</param>
        public InterfacesIChainlinkAnyApiClientRequestRequestContractParams(string _0 = default(string), string _1 = default(string), string _2 = default(string), string _3 = default(string), string _4 = default(string), string _5 = default(string), string fulfillAddress = default(string), string fulfillPrefixData = default(string), string reqJobId = default(string), string reqUrl = default(string), string reqPath = default(string), string reqFee = default(string))
        {
            this._0 = _0;
            this._1 = _1;
            this._2 = _2;
            this._3 = _3;
            this._4 = _4;
            this._5 = _5;
            this.FulfillAddress = fulfillAddress;
            this.FulfillPrefixData = fulfillPrefixData;
            this.ReqJobId = reqJobId;
            this.ReqUrl = reqUrl;
            this.ReqPath = reqPath;
            this.ReqFee = reqFee;
        }

        /// <summary>
        /// An ethereum address
        /// </summary>
        /// <value>An ethereum address</value>
        [DataMember(Name = "0", EmitDefaultValue = false)]
        public string _0 { get; set; }

        /// <summary>
        /// An arbitrary length byte array
        /// </summary>
        /// <value>An arbitrary length byte array</value>
        [DataMember(Name = "1", EmitDefaultValue = false)]
        public string _1 { get; set; }

        /// <summary>
        /// A solidity bytes32
        /// </summary>
        /// <value>A solidity bytes32</value>
        [DataMember(Name = "2", EmitDefaultValue = false)]
        public string _2 { get; set; }

        /// <summary>
        /// A string
        /// </summary>
        /// <value>A string</value>
        [DataMember(Name = "3", EmitDefaultValue = false)]
        public string _3 { get; set; }

        /// <summary>
        /// A string
        /// </summary>
        /// <value>A string</value>
        [DataMember(Name = "4", EmitDefaultValue = false)]
        public string _4 { get; set; }

        /// <summary>
        /// A solidity uint256
        /// </summary>
        /// <value>A solidity uint256</value>
        [DataMember(Name = "5", EmitDefaultValue = false)]
        public string _5 { get; set; }

        /// <summary>
        /// An ethereum address
        /// </summary>
        /// <value>An ethereum address</value>
        [DataMember(Name = "fulfillAddress", EmitDefaultValue = false)]
        public string FulfillAddress { get; set; }

        /// <summary>
        /// An arbitrary length byte array
        /// </summary>
        /// <value>An arbitrary length byte array</value>
        [DataMember(Name = "fulfillPrefixData", EmitDefaultValue = false)]
        public string FulfillPrefixData { get; set; }

        /// <summary>
        /// A solidity bytes32
        /// </summary>
        /// <value>A solidity bytes32</value>
        [DataMember(Name = "reqJobId", EmitDefaultValue = false)]
        public string ReqJobId { get; set; }

        /// <summary>
        /// A string
        /// </summary>
        /// <value>A string</value>
        [DataMember(Name = "reqUrl", EmitDefaultValue = false)]
        public string ReqUrl { get; set; }

        /// <summary>
        /// A string
        /// </summary>
        /// <value>A string</value>
        [DataMember(Name = "reqPath", EmitDefaultValue = false)]
        public string ReqPath { get; set; }

        /// <summary>
        /// A solidity uint256
        /// </summary>
        /// <value>A solidity uint256</value>
        [DataMember(Name = "reqFee", EmitDefaultValue = false)]
        public string ReqFee { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InterfacesIChainlinkAnyApiClientRequestRequestContractParams {\n");
            sb.Append("  _0: ").Append(_0).Append("\n");
            sb.Append("  _1: ").Append(_1).Append("\n");
            sb.Append("  _2: ").Append(_2).Append("\n");
            sb.Append("  _3: ").Append(_3).Append("\n");
            sb.Append("  _4: ").Append(_4).Append("\n");
            sb.Append("  _5: ").Append(_5).Append("\n");
            sb.Append("  FulfillAddress: ").Append(FulfillAddress).Append("\n");
            sb.Append("  FulfillPrefixData: ").Append(FulfillPrefixData).Append("\n");
            sb.Append("  ReqJobId: ").Append(ReqJobId).Append("\n");
            sb.Append("  ReqUrl: ").Append(ReqUrl).Append("\n");
            sb.Append("  ReqPath: ").Append(ReqPath).Append("\n");
            sb.Append("  ReqFee: ").Append(ReqFee).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input as InterfacesIChainlinkAnyApiClientRequestRequestContractParams).AreEqual;
        }

        /// <summary>
        /// Returns true if InterfacesIChainlinkAnyApiClientRequestRequestContractParams instances are equal
        /// </summary>
        /// <param name="input">Instance of InterfacesIChainlinkAnyApiClientRequestRequestContractParams to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InterfacesIChainlinkAnyApiClientRequestRequestContractParams input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this._0 != null)
                {
                    hashCode = (hashCode * 59) + this._0.GetHashCode();
                }
                if (this._1 != null)
                {
                    hashCode = (hashCode * 59) + this._1.GetHashCode();
                }
                if (this._2 != null)
                {
                    hashCode = (hashCode * 59) + this._2.GetHashCode();
                }
                if (this._3 != null)
                {
                    hashCode = (hashCode * 59) + this._3.GetHashCode();
                }
                if (this._4 != null)
                {
                    hashCode = (hashCode * 59) + this._4.GetHashCode();
                }
                if (this._5 != null)
                {
                    hashCode = (hashCode * 59) + this._5.GetHashCode();
                }
                if (this.FulfillAddress != null)
                {
                    hashCode = (hashCode * 59) + this.FulfillAddress.GetHashCode();
                }
                if (this.FulfillPrefixData != null)
                {
                    hashCode = (hashCode * 59) + this.FulfillPrefixData.GetHashCode();
                }
                if (this.ReqJobId != null)
                {
                    hashCode = (hashCode * 59) + this.ReqJobId.GetHashCode();
                }
                if (this.ReqUrl != null)
                {
                    hashCode = (hashCode * 59) + this.ReqUrl.GetHashCode();
                }
                if (this.ReqPath != null)
                {
                    hashCode = (hashCode * 59) + this.ReqPath.GetHashCode();
                }
                if (this.ReqFee != null)
                {
                    hashCode = (hashCode * 59) + this.ReqFee.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // _0 (string) pattern
            Regex regex_0 = new Regex(@"0x([a-fA-F0-9]){40}", RegexOptions.CultureInvariant);
            if (false == regex_0.Match(this._0).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for _0, must match a pattern of " + regex_0, new [] { "_0" });
            }

            // FulfillAddress (string) pattern
            Regex regexFulfillAddress = new Regex(@"0x([a-fA-F0-9]){40}", RegexOptions.CultureInvariant);
            if (false == regexFulfillAddress.Match(this.FulfillAddress).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for FulfillAddress, must match a pattern of " + regexFulfillAddress, new [] { "FulfillAddress" });
            }

            yield break;
        }
    }

}
