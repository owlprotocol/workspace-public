/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using OpenAPIClientUtils = Org.OpenAPITools.Client.ClientUtils;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WebhooksReadme200Response
    /// </summary>
    [DataContract(Name = "webhooks_readme_200_response")]
    public partial class WebhooksReadme200Response : IEquatable<WebhooksReadme200Response>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhooksReadme200Response" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected WebhooksReadme200Response() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="WebhooksReadme200Response" /> class.
        /// </summary>
        /// <param name="email">email (required).</param>
        /// <param name="apiKey">apiKey (required).</param>
        /// <param name="dfnsAddress">dfnsAddress.</param>
        /// <param name="dfnsId">dfnsId.</param>
        /// <param name="dfnsStatus">dfnsStatus.</param>
        /// <param name="gnosisTxHash">gnosisTxHash.</param>
        /// <param name="gnosisAddress">gnosisAddress.</param>
        /// <param name="topupTotals">topupTotals.</param>
        /// <param name="authorization">authorization (required).</param>
        public WebhooksReadme200Response(string email = default(string), string apiKey = default(string), string dfnsAddress = default(string), string dfnsId = default(string), string dfnsStatus = default(string), string gnosisTxHash = default(string), string gnosisAddress = default(string), Object topupTotals = default(Object), string authorization = default(string))
        {
            // to ensure "email" is required (not null)
            if (email == null)
            {
                throw new ArgumentNullException("email is a required property for WebhooksReadme200Response and cannot be null");
            }
            this.Email = email;
            // to ensure "apiKey" is required (not null)
            if (apiKey == null)
            {
                throw new ArgumentNullException("apiKey is a required property for WebhooksReadme200Response and cannot be null");
            }
            this.ApiKey = apiKey;
            // to ensure "authorization" is required (not null)
            if (authorization == null)
            {
                throw new ArgumentNullException("authorization is a required property for WebhooksReadme200Response and cannot be null");
            }
            this.Authorization = authorization;
            this.DfnsAddress = dfnsAddress;
            this.DfnsId = dfnsId;
            this.DfnsStatus = dfnsStatus;
            this.GnosisTxHash = gnosisTxHash;
            this.GnosisAddress = gnosisAddress;
            this.TopupTotals = topupTotals;
        }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", IsRequired = true, EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets ApiKey
        /// </summary>
        [DataMember(Name = "apiKey", IsRequired = true, EmitDefaultValue = true)]
        public string ApiKey { get; set; }

        /// <summary>
        /// Gets or Sets DfnsAddress
        /// </summary>
        [DataMember(Name = "dfnsAddress", EmitDefaultValue = false)]
        public string DfnsAddress { get; set; }

        /// <summary>
        /// Gets or Sets DfnsId
        /// </summary>
        [DataMember(Name = "dfnsId", EmitDefaultValue = false)]
        public string DfnsId { get; set; }

        /// <summary>
        /// Gets or Sets DfnsStatus
        /// </summary>
        [DataMember(Name = "dfnsStatus", EmitDefaultValue = false)]
        public string DfnsStatus { get; set; }

        /// <summary>
        /// Gets or Sets GnosisTxHash
        /// </summary>
        [DataMember(Name = "gnosisTxHash", EmitDefaultValue = false)]
        public string GnosisTxHash { get; set; }

        /// <summary>
        /// Gets or Sets GnosisAddress
        /// </summary>
        [DataMember(Name = "gnosisAddress", EmitDefaultValue = false)]
        public string GnosisAddress { get; set; }

        /// <summary>
        /// Gets or Sets TopupTotals
        /// </summary>
        [DataMember(Name = "topupTotals", EmitDefaultValue = true)]
        public Object TopupTotals { get; set; }

        /// <summary>
        /// Gets or Sets Authorization
        /// </summary>
        [DataMember(Name = "Authorization", IsRequired = true, EmitDefaultValue = true)]
        public string Authorization { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebhooksReadme200Response {\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  ApiKey: ").Append(ApiKey).Append("\n");
            sb.Append("  DfnsAddress: ").Append(DfnsAddress).Append("\n");
            sb.Append("  DfnsId: ").Append(DfnsId).Append("\n");
            sb.Append("  DfnsStatus: ").Append(DfnsStatus).Append("\n");
            sb.Append("  GnosisTxHash: ").Append(GnosisTxHash).Append("\n");
            sb.Append("  GnosisAddress: ").Append(GnosisAddress).Append("\n");
            sb.Append("  TopupTotals: ").Append(TopupTotals).Append("\n");
            sb.Append("  Authorization: ").Append(Authorization).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input as WebhooksReadme200Response).AreEqual;
        }

        /// <summary>
        /// Returns true if WebhooksReadme200Response instances are equal
        /// </summary>
        /// <param name="input">Instance of WebhooksReadme200Response to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WebhooksReadme200Response input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.ApiKey != null)
                {
                    hashCode = (hashCode * 59) + this.ApiKey.GetHashCode();
                }
                if (this.DfnsAddress != null)
                {
                    hashCode = (hashCode * 59) + this.DfnsAddress.GetHashCode();
                }
                if (this.DfnsId != null)
                {
                    hashCode = (hashCode * 59) + this.DfnsId.GetHashCode();
                }
                if (this.DfnsStatus != null)
                {
                    hashCode = (hashCode * 59) + this.DfnsStatus.GetHashCode();
                }
                if (this.GnosisTxHash != null)
                {
                    hashCode = (hashCode * 59) + this.GnosisTxHash.GetHashCode();
                }
                if (this.GnosisAddress != null)
                {
                    hashCode = (hashCode * 59) + this.GnosisAddress.GetHashCode();
                }
                if (this.TopupTotals != null)
                {
                    hashCode = (hashCode * 59) + this.TopupTotals.GetHashCode();
                }
                if (this.Authorization != null)
                {
                    hashCode = (hashCode * 59) + this.Authorization.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
