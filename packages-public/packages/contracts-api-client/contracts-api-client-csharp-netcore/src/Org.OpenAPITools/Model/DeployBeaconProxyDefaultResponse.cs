/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;
using OpenAPIClientUtils = Org.OpenAPITools.Client.ClientUtils;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// DeployBeaconProxyDefaultResponse
    /// </summary>
    [DataContract(Name = "deploy_BeaconProxy_default_response")]
    public partial class DeployBeaconProxyDefaultResponse : IEquatable<DeployBeaconProxyDefaultResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeployBeaconProxyDefaultResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected DeployBeaconProxyDefaultResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="DeployBeaconProxyDefaultResponse" /> class.
        /// </summary>
        /// <param name="message">message (required).</param>
        /// <param name="code">code (required).</param>
        /// <param name="issues">issues.</param>
        public DeployBeaconProxyDefaultResponse(string message = default(string), string code = default(string), List<DeployBeaconProxyDefaultResponseIssuesInner> issues = default(List<DeployBeaconProxyDefaultResponseIssuesInner>))
        {
            // to ensure "message" is required (not null)
            if (message == null)
            {
                throw new ArgumentNullException("message is a required property for DeployBeaconProxyDefaultResponse and cannot be null");
            }
            this.Message = message;
            // to ensure "code" is required (not null)
            if (code == null)
            {
                throw new ArgumentNullException("code is a required property for DeployBeaconProxyDefaultResponse and cannot be null");
            }
            this.Code = code;
            this.Issues = issues;
        }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", IsRequired = true, EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name = "code", IsRequired = true, EmitDefaultValue = true)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or Sets Issues
        /// </summary>
        [DataMember(Name = "issues", EmitDefaultValue = false)]
        public List<DeployBeaconProxyDefaultResponseIssuesInner> Issues { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeployBeaconProxyDefaultResponse {\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Issues: ").Append(Issues).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input as DeployBeaconProxyDefaultResponse).AreEqual;
        }

        /// <summary>
        /// Returns true if DeployBeaconProxyDefaultResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of DeployBeaconProxyDefaultResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(DeployBeaconProxyDefaultResponse input)
        {
            return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Message != null)
                {
                    hashCode = (hashCode * 59) + this.Message.GetHashCode();
                }
                if (this.Code != null)
                {
                    hashCode = (hashCode * 59) + this.Code.GetHashCode();
                }
                if (this.Issues != null)
                {
                    hashCode = (hashCode * 59) + this.Issues.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
