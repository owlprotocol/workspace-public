/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DeployApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DeployApiTests : IDisposable
    {
        private DeployApi instance;

        public DeployApiTests()
        {
            instance = new DeployApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DeployApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' DeployApi
            //Assert.IsType<DeployApi>(instance);
        }

        /// <summary>
        /// Test DeployBeaconProxy
        /// </summary>
        [Fact]
        public void DeployBeaconProxyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployBeaconProxyRequest deployBeaconProxyRequest = null;
            //var response = instance.DeployBeaconProxy(networkId, deployBeaconProxyRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployChainlinkAnyApiClient
        /// </summary>
        [Fact]
        public void DeployChainlinkAnyApiClientTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployChainlinkAnyApiClientRequest deployChainlinkAnyApiClientRequest = null;
            //var response = instance.DeployChainlinkAnyApiClient(networkId, deployChainlinkAnyApiClientRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployERC1155Mintable
        /// </summary>
        [Fact]
        public void DeployERC1155MintableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployERC1155MintableRequest deployERC1155MintableRequest = null;
            //var response = instance.DeployERC1155Mintable(networkId, deployERC1155MintableRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployERC20Mintable
        /// </summary>
        [Fact]
        public void DeployERC20MintableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployERC20MintableRequest deployERC20MintableRequest = null;
            //var response = instance.DeployERC20Mintable(networkId, deployERC20MintableRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployERC2981Setter
        /// </summary>
        [Fact]
        public void DeployERC2981SetterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployERC2981SetterRequest deployERC2981SetterRequest = null;
            //var response = instance.DeployERC2981Setter(networkId, deployERC2981SetterRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployERC721Mintable
        /// </summary>
        [Fact]
        public void DeployERC721MintableTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployERC721MintableRequest deployERC721MintableRequest = null;
            //var response = instance.DeployERC721Mintable(networkId, deployERC721MintableRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployERC721MintableAutoId
        /// </summary>
        [Fact]
        public void DeployERC721MintableAutoIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployERC721MintableRequest deployERC721MintableRequest = null;
            //var response = instance.DeployERC721MintableAutoId(networkId, deployERC721MintableRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployTokenDna
        /// </summary>
        [Fact]
        public void DeployTokenDnaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployTokenDnaRequest deployTokenDnaRequest = null;
            //var response = instance.DeployTokenDna(networkId, deployTokenDnaRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployTokenURI
        /// </summary>
        [Fact]
        public void DeployTokenURITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployTokenURIRequest deployTokenURIRequest = null;
            //var response = instance.DeployTokenURI(networkId, deployTokenURIRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployTokenURIBaseURI
        /// </summary>
        [Fact]
        public void DeployTokenURIBaseURITest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployTokenURIBaseURIRequest deployTokenURIBaseURIRequest = null;
            //var response = instance.DeployTokenURIBaseURI(networkId, deployTokenURIBaseURIRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployTokenURIDna
        /// </summary>
        [Fact]
        public void DeployTokenURIDnaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployTokenURIDnaRequest deployTokenURIDnaRequest = null;
            //var response = instance.DeployTokenURIDna(networkId, deployTokenURIDnaRequest);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test DeployUpgradeableBeacon
        /// </summary>
        [Fact]
        public void DeployUpgradeableBeaconTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //DeployUpgradeableBeaconRequest deployUpgradeableBeaconRequest = null;
            //var response = instance.DeployUpgradeableBeacon(networkId, deployUpgradeableBeaconRequest);
            //Assert.IsType<Object>(response);
        }
    }
}
