/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing IERC721Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IERC721ApiTests : IDisposable
    {
        private IERC721Api instance;

        public IERC721ApiTests()
        {
            instance = new IERC721Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IERC721Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IERC721Api
            //Assert.IsType<IERC721Api>(instance);
        }

        /// <summary>
        /// Test InterfacesIERC721Approve
        /// </summary>
        [Fact]
        public void InterfacesIERC721ApproveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721ApproveRequest interfacesIERC721ApproveRequest = null;
            //var response = instance.InterfacesIERC721Approve(networkId, address, interfacesIERC721ApproveRequest);
            //Assert.IsType<InterfacesIERC721Approve200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721BalanceOf
        /// </summary>
        [Fact]
        public void InterfacesIERC721BalanceOfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721BalanceOfRequest interfacesIERC721BalanceOfRequest = null;
            //var response = instance.InterfacesIERC721BalanceOf(networkId, address, interfacesIERC721BalanceOfRequest);
            //Assert.IsType<InterfacesIERC721BalanceOf200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721GetApproved
        /// </summary>
        [Fact]
        public void InterfacesIERC721GetApprovedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721GetApprovedRequest interfacesIERC721GetApprovedRequest = null;
            //var response = instance.InterfacesIERC721GetApproved(networkId, address, interfacesIERC721GetApprovedRequest);
            //Assert.IsType<InterfacesIERC721GetApproved200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721IsApprovedForAll
        /// </summary>
        [Fact]
        public void InterfacesIERC721IsApprovedForAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721IsApprovedForAllRequest interfacesIERC721IsApprovedForAllRequest = null;
            //var response = instance.InterfacesIERC721IsApprovedForAll(networkId, address, interfacesIERC721IsApprovedForAllRequest);
            //Assert.IsType<InterfacesIERC721IsApprovedForAll200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721OwnerOf
        /// </summary>
        [Fact]
        public void InterfacesIERC721OwnerOfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721GetApprovedRequest interfacesIERC721GetApprovedRequest = null;
            //var response = instance.InterfacesIERC721OwnerOf(networkId, address, interfacesIERC721GetApprovedRequest);
            //Assert.IsType<InterfacesIERC721OwnerOf200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721SafeTransferFrom
        /// </summary>
        [Fact]
        public void InterfacesIERC721SafeTransferFromTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721SafeTransferFromRequest interfacesIERC721SafeTransferFromRequest = null;
            //var response = instance.InterfacesIERC721SafeTransferFrom(networkId, address, interfacesIERC721SafeTransferFromRequest);
            //Assert.IsType<InterfacesIERC721SafeTransferFrom200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721SetApprovalForAll
        /// </summary>
        [Fact]
        public void InterfacesIERC721SetApprovalForAllTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721SetApprovalForAllRequest interfacesIERC721SetApprovalForAllRequest = null;
            //var response = instance.InterfacesIERC721SetApprovalForAll(networkId, address, interfacesIERC721SetApprovalForAllRequest);
            //Assert.IsType<InterfacesIERC721SetApprovalForAll200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721SupportsInterface
        /// </summary>
        [Fact]
        public void InterfacesIERC721SupportsInterfaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC165SupportsInterfaceRequest interfacesIERC165SupportsInterfaceRequest = null;
            //var response = instance.InterfacesIERC721SupportsInterface(networkId, address, interfacesIERC165SupportsInterfaceRequest);
            //Assert.IsType<InterfacesIERC165SupportsInterface200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC721TransferFrom
        /// </summary>
        [Fact]
        public void InterfacesIERC721TransferFromTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721TransferFromRequest interfacesIERC721TransferFromRequest = null;
            //var response = instance.InterfacesIERC721TransferFrom(networkId, address, interfacesIERC721TransferFromRequest);
            //Assert.IsType<InterfacesIERC721TransferFrom200Response>(response);
        }
    }
}
