/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing IERC1820Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IERC1820ApiTests : IDisposable
    {
        private IERC1820Api instance;

        public IERC1820ApiTests()
        {
            instance = new IERC1820Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IERC1820Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IERC1820Api
            //Assert.IsType<IERC1820Api>(instance);
        }

        /// <summary>
        /// Test InterfacesIERC1820GetInterfaceImplementer
        /// </summary>
        [Fact]
        public void InterfacesIERC1820GetInterfaceImplementerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820GetInterfaceImplementerRequest interfacesIERC1820GetInterfaceImplementerRequest = null;
            //var response = instance.InterfacesIERC1820GetInterfaceImplementer(networkId, address, interfacesIERC1820GetInterfaceImplementerRequest);
            //Assert.IsType<InterfacesIERC1820GetInterfaceImplementer200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820GetManager
        /// </summary>
        [Fact]
        public void InterfacesIERC1820GetManagerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820GetManagerRequest interfacesIERC1820GetManagerRequest = null;
            //var response = instance.InterfacesIERC1820GetManager(networkId, address, interfacesIERC1820GetManagerRequest);
            //Assert.IsType<InterfacesIERC1820GetManager200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820ImplementsERC165Interface
        /// </summary>
        [Fact]
        public void InterfacesIERC1820ImplementsERC165InterfaceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
            //var response = instance.InterfacesIERC1820ImplementsERC165Interface(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
            //Assert.IsType<InterfacesIERC1820ImplementsERC165Interface200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820ImplementsERC165InterfaceNoCache
        /// </summary>
        [Fact]
        public void InterfacesIERC1820ImplementsERC165InterfaceNoCacheTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
            //var response = instance.InterfacesIERC1820ImplementsERC165InterfaceNoCache(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
            //Assert.IsType<InterfacesIERC1820ImplementsERC165Interface200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820InterfaceHash
        /// </summary>
        [Fact]
        public void InterfacesIERC1820InterfaceHashTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820InterfaceHashRequest interfacesIERC1820InterfaceHashRequest = null;
            //var response = instance.InterfacesIERC1820InterfaceHash(networkId, address, interfacesIERC1820InterfaceHashRequest);
            //Assert.IsType<InterfacesIERC1820InterfaceHash200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820SetInterfaceImplementer
        /// </summary>
        [Fact]
        public void InterfacesIERC1820SetInterfaceImplementerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820SetInterfaceImplementerRequest interfacesIERC1820SetInterfaceImplementerRequest = null;
            //var response = instance.InterfacesIERC1820SetInterfaceImplementer(networkId, address, interfacesIERC1820SetInterfaceImplementerRequest);
            //Assert.IsType<InterfacesIERC1820SetInterfaceImplementer200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820SetManager
        /// </summary>
        [Fact]
        public void InterfacesIERC1820SetManagerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820SetManagerRequest interfacesIERC1820SetManagerRequest = null;
            //var response = instance.InterfacesIERC1820SetManager(networkId, address, interfacesIERC1820SetManagerRequest);
            //Assert.IsType<InterfacesIERC1820SetManager200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC1820UpdateERC165Cache
        /// </summary>
        [Fact]
        public void InterfacesIERC1820UpdateERC165CacheTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820ImplementsERC165InterfaceRequest interfacesIERC1820ImplementsERC165InterfaceRequest = null;
            //var response = instance.InterfacesIERC1820UpdateERC165Cache(networkId, address, interfacesIERC1820ImplementsERC165InterfaceRequest);
            //Assert.IsType<InterfacesIERC1820UpdateERC165Cache200Response>(response);
        }
    }
}
