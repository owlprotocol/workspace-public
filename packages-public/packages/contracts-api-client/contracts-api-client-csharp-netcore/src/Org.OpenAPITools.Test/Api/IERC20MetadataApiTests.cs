/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing IERC20MetadataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IERC20MetadataApiTests : IDisposable
    {
        private IERC20MetadataApi instance;

        public IERC20MetadataApiTests()
        {
            instance = new IERC20MetadataApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IERC20MetadataApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IERC20MetadataApi
            //Assert.IsType<IERC20MetadataApi>(instance);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataAllowance
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataAllowanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20AllowanceRequest interfacesIERC20AllowanceRequest = null;
            //var response = instance.InterfacesIERC20MetadataAllowance(networkId, address, interfacesIERC20AllowanceRequest);
            //Assert.IsType<InterfacesIERC20Allowance200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataApprove
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataApproveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20ApproveRequest interfacesIERC20ApproveRequest = null;
            //var response = instance.InterfacesIERC20MetadataApprove(networkId, address, interfacesIERC20ApproveRequest);
            //Assert.IsType<InterfacesIERC20Approve200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataBalanceOf
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataBalanceOfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820GetManagerRequest interfacesIERC1820GetManagerRequest = null;
            //var response = instance.InterfacesIERC20MetadataBalanceOf(networkId, address, interfacesIERC1820GetManagerRequest);
            //Assert.IsType<InterfacesIERC20BalanceOf200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataDecimals
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataDecimalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
            //var response = instance.InterfacesIERC20MetadataDecimals(networkId, address, interfacesIBeaconImplementationRequest);
            //Assert.IsType<InterfacesIERC20MetadataDecimals200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataName
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataNameTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
            //var response = instance.InterfacesIERC20MetadataName(networkId, address, interfacesIBeaconImplementationRequest);
            //Assert.IsType<InterfacesIContractURIContractURI200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataSymbol
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataSymbolTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
            //var response = instance.InterfacesIERC20MetadataSymbol(networkId, address, interfacesIBeaconImplementationRequest);
            //Assert.IsType<InterfacesIContractURIContractURI200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataTotalSupply
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataTotalSupplyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
            //var response = instance.InterfacesIERC20MetadataTotalSupply(networkId, address, interfacesIBeaconImplementationRequest);
            //Assert.IsType<InterfacesIERC20TotalSupply200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataTransfer
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataTransferTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20TransferRequest interfacesIERC20TransferRequest = null;
            //var response = instance.InterfacesIERC20MetadataTransfer(networkId, address, interfacesIERC20TransferRequest);
            //Assert.IsType<InterfacesIERC20Transfer200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20MetadataTransferFrom
        /// </summary>
        [Fact]
        public void InterfacesIERC20MetadataTransferFromTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20TransferFromRequest interfacesIERC20TransferFromRequest = null;
            //var response = instance.InterfacesIERC20MetadataTransferFrom(networkId, address, interfacesIERC20TransferFromRequest);
            //Assert.IsType<InterfacesIERC20TransferFrom200Response>(response);
        }
    }
}
