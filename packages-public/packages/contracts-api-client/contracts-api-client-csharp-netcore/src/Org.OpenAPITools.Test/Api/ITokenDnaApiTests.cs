/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ITokenDnaApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ITokenDnaApiTests : IDisposable
    {
        private ITokenDnaApi instance;

        public ITokenDnaApiTests()
        {
            instance = new ITokenDnaApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ITokenDnaApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ITokenDnaApi
            //Assert.IsType<ITokenDnaApi>(instance);
        }

        /// <summary>
        /// Test InterfacesITokenDnaGetDna
        /// </summary>
        [Fact]
        public void InterfacesITokenDnaGetDnaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC721GetApprovedRequest interfacesIERC721GetApprovedRequest = null;
            //var response = instance.InterfacesITokenDnaGetDna(networkId, address, interfacesIERC721GetApprovedRequest);
            //Assert.IsType<InterfacesITokenDnaGetDna200Response>(response);
        }

        /// <summary>
        /// Test InterfacesITokenDnaGetDnaBatch
        /// </summary>
        [Fact]
        public void InterfacesITokenDnaGetDnaBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesITokenDnaGetDnaBatchRequest interfacesITokenDnaGetDnaBatchRequest = null;
            //var response = instance.InterfacesITokenDnaGetDnaBatch(networkId, address, interfacesITokenDnaGetDnaBatchRequest);
            //Assert.IsType<InterfacesITokenDnaGetDnaBatch200Response>(response);
        }

        /// <summary>
        /// Test InterfacesITokenDnaSetDna
        /// </summary>
        [Fact]
        public void InterfacesITokenDnaSetDnaTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesITokenDnaSetDnaRequest interfacesITokenDnaSetDnaRequest = null;
            //var response = instance.InterfacesITokenDnaSetDna(networkId, address, interfacesITokenDnaSetDnaRequest);
            //Assert.IsType<InterfacesITokenDnaSetDna200Response>(response);
        }

        /// <summary>
        /// Test InterfacesITokenDnaSetDnaBatch
        /// </summary>
        [Fact]
        public void InterfacesITokenDnaSetDnaBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesITokenDnaSetDnaBatchRequest interfacesITokenDnaSetDnaBatchRequest = null;
            //var response = instance.InterfacesITokenDnaSetDnaBatch(networkId, address, interfacesITokenDnaSetDnaBatchRequest);
            //Assert.IsType<InterfacesITokenDnaSetDnaBatch200Response>(response);
        }
    }
}
