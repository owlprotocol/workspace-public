/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing IERC20Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class IERC20ApiTests : IDisposable
    {
        private IERC20Api instance;

        public IERC20ApiTests()
        {
            instance = new IERC20Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IERC20Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' IERC20Api
            //Assert.IsType<IERC20Api>(instance);
        }

        /// <summary>
        /// Test InterfacesIERC20Allowance
        /// </summary>
        [Fact]
        public void InterfacesIERC20AllowanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20AllowanceRequest interfacesIERC20AllowanceRequest = null;
            //var response = instance.InterfacesIERC20Allowance(networkId, address, interfacesIERC20AllowanceRequest);
            //Assert.IsType<InterfacesIERC20Allowance200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20Approve
        /// </summary>
        [Fact]
        public void InterfacesIERC20ApproveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20ApproveRequest interfacesIERC20ApproveRequest = null;
            //var response = instance.InterfacesIERC20Approve(networkId, address, interfacesIERC20ApproveRequest);
            //Assert.IsType<InterfacesIERC20Approve200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20BalanceOf
        /// </summary>
        [Fact]
        public void InterfacesIERC20BalanceOfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC1820GetManagerRequest interfacesIERC1820GetManagerRequest = null;
            //var response = instance.InterfacesIERC20BalanceOf(networkId, address, interfacesIERC1820GetManagerRequest);
            //Assert.IsType<InterfacesIERC20BalanceOf200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20TotalSupply
        /// </summary>
        [Fact]
        public void InterfacesIERC20TotalSupplyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIBeaconImplementationRequest interfacesIBeaconImplementationRequest = null;
            //var response = instance.InterfacesIERC20TotalSupply(networkId, address, interfacesIBeaconImplementationRequest);
            //Assert.IsType<InterfacesIERC20TotalSupply200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20Transfer
        /// </summary>
        [Fact]
        public void InterfacesIERC20TransferTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20TransferRequest interfacesIERC20TransferRequest = null;
            //var response = instance.InterfacesIERC20Transfer(networkId, address, interfacesIERC20TransferRequest);
            //Assert.IsType<InterfacesIERC20Transfer200Response>(response);
        }

        /// <summary>
        /// Test InterfacesIERC20TransferFrom
        /// </summary>
        [Fact]
        public void InterfacesIERC20TransferFromTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string networkId = null;
            //string address = null;
            //InterfacesIERC20TransferFromRequest interfacesIERC20TransferFromRequest = null;
            //var response = instance.InterfacesIERC20TransferFrom(networkId, address, interfacesIERC20TransferFromRequest);
            //Assert.IsType<InterfacesIERC20TransferFrom200Response>(response);
        }
    }
}
