/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesIERC1155MintableMintBatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesIERC1155MintableMintBatchRequest{}

// InterfacesIERC1155MintableMintBatchRequest struct for InterfacesIERC1155MintableMintBatchRequest
type InterfacesIERC1155MintableMintBatchRequest struct {
	ContractParams InterfacesIERC1155MintableMintBatchRequestContractParams `json:"contractParams"`
}

// NewInterfacesIERC1155MintableMintBatchRequest instantiates a new InterfacesIERC1155MintableMintBatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesIERC1155MintableMintBatchRequest(contractParams InterfacesIERC1155MintableMintBatchRequestContractParams) *InterfacesIERC1155MintableMintBatchRequest {
	this := InterfacesIERC1155MintableMintBatchRequest{}
	this.ContractParams = contractParams
	return &this
}

// NewInterfacesIERC1155MintableMintBatchRequestWithDefaults instantiates a new InterfacesIERC1155MintableMintBatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesIERC1155MintableMintBatchRequestWithDefaults() *InterfacesIERC1155MintableMintBatchRequest {
	this := InterfacesIERC1155MintableMintBatchRequest{}
	return &this
}

// GetContractParams returns the ContractParams field value
func (o *InterfacesIERC1155MintableMintBatchRequest) GetContractParams() InterfacesIERC1155MintableMintBatchRequestContractParams {
	if o == nil {
		var ret InterfacesIERC1155MintableMintBatchRequestContractParams
		return ret
	}

	return o.ContractParams
}

// GetContractParamsOk returns a tuple with the ContractParams field value
// and a boolean to check if the value has been set.
func (o *InterfacesIERC1155MintableMintBatchRequest) GetContractParamsOk() (*InterfacesIERC1155MintableMintBatchRequestContractParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractParams, true
}

// SetContractParams sets field value
func (o *InterfacesIERC1155MintableMintBatchRequest) SetContractParams(v InterfacesIERC1155MintableMintBatchRequestContractParams) {
	o.ContractParams = v
}

func (o InterfacesIERC1155MintableMintBatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesIERC1155MintableMintBatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractParams"] = o.ContractParams
	return toSerialize, nil
}

type NullableInterfacesIERC1155MintableMintBatchRequest struct {
	value *InterfacesIERC1155MintableMintBatchRequest
	isSet bool
}

func (v NullableInterfacesIERC1155MintableMintBatchRequest) Get() *InterfacesIERC1155MintableMintBatchRequest {
	return v.value
}

func (v *NullableInterfacesIERC1155MintableMintBatchRequest) Set(val *InterfacesIERC1155MintableMintBatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesIERC1155MintableMintBatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesIERC1155MintableMintBatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesIERC1155MintableMintBatchRequest(val *InterfacesIERC1155MintableMintBatchRequest) *NullableInterfacesIERC1155MintableMintBatchRequest {
	return &NullableInterfacesIERC1155MintableMintBatchRequest{value: val, isSet: true}
}

func (v NullableInterfacesIERC1155MintableMintBatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesIERC1155MintableMintBatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


