/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesIERC1820InterfaceHashRequestContractParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesIERC1820InterfaceHashRequestContractParams{}

// InterfacesIERC1820InterfaceHashRequestContractParams struct for InterfacesIERC1820InterfaceHashRequestContractParams
type InterfacesIERC1820InterfaceHashRequestContractParams struct {
	// A string
	Var0 *string `json:"0,omitempty"`
	// A string
	InterfaceName *string `json:"interfaceName,omitempty"`
}

// NewInterfacesIERC1820InterfaceHashRequestContractParams instantiates a new InterfacesIERC1820InterfaceHashRequestContractParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesIERC1820InterfaceHashRequestContractParams() *InterfacesIERC1820InterfaceHashRequestContractParams {
	this := InterfacesIERC1820InterfaceHashRequestContractParams{}
	return &this
}

// NewInterfacesIERC1820InterfaceHashRequestContractParamsWithDefaults instantiates a new InterfacesIERC1820InterfaceHashRequestContractParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesIERC1820InterfaceHashRequestContractParamsWithDefaults() *InterfacesIERC1820InterfaceHashRequestContractParams {
	this := InterfacesIERC1820InterfaceHashRequestContractParams{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) GetVar0() string {
	if o == nil || IsNil(o.Var0) {
		var ret string
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) GetVar0Ok() (*string, bool) {
	if o == nil || IsNil(o.Var0) {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) HasVar0() bool {
	if o != nil && !IsNil(o.Var0) {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given string and assigns it to the Var0 field.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) SetVar0(v string) {
	o.Var0 = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) GetInterfaceName() string {
	if o == nil || IsNil(o.InterfaceName) {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) GetInterfaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.InterfaceName) {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) HasInterfaceName() bool {
	if o != nil && !IsNil(o.InterfaceName) {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *InterfacesIERC1820InterfaceHashRequestContractParams) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

func (o InterfacesIERC1820InterfaceHashRequestContractParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesIERC1820InterfaceHashRequestContractParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var0) {
		toSerialize["0"] = o.Var0
	}
	if !IsNil(o.InterfaceName) {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	return toSerialize, nil
}

type NullableInterfacesIERC1820InterfaceHashRequestContractParams struct {
	value *InterfacesIERC1820InterfaceHashRequestContractParams
	isSet bool
}

func (v NullableInterfacesIERC1820InterfaceHashRequestContractParams) Get() *InterfacesIERC1820InterfaceHashRequestContractParams {
	return v.value
}

func (v *NullableInterfacesIERC1820InterfaceHashRequestContractParams) Set(val *InterfacesIERC1820InterfaceHashRequestContractParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesIERC1820InterfaceHashRequestContractParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesIERC1820InterfaceHashRequestContractParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesIERC1820InterfaceHashRequestContractParams(val *InterfacesIERC1820InterfaceHashRequestContractParams) *NullableInterfacesIERC1820InterfaceHashRequestContractParams {
	return &NullableInterfacesIERC1820InterfaceHashRequestContractParams{value: val, isSet: true}
}

func (v NullableInterfacesIERC1820InterfaceHashRequestContractParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesIERC1820InterfaceHashRequestContractParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


