/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesIBeaconProxySetBeaconRequestContractParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesIBeaconProxySetBeaconRequestContractParams{}

// InterfacesIBeaconProxySetBeaconRequestContractParams struct for InterfacesIBeaconProxySetBeaconRequestContractParams
type InterfacesIBeaconProxySetBeaconRequestContractParams struct {
	// An ethereum address
	Var0 *string `json:"0,omitempty"`
	// An arbitrary length byte array
	Var1 *string `json:"1,omitempty"`
	// An ethereum address
	BeaconAddress *string `json:"_beaconAddress,omitempty"`
	// An arbitrary length byte array
	Data *string `json:"data,omitempty"`
}

// NewInterfacesIBeaconProxySetBeaconRequestContractParams instantiates a new InterfacesIBeaconProxySetBeaconRequestContractParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesIBeaconProxySetBeaconRequestContractParams() *InterfacesIBeaconProxySetBeaconRequestContractParams {
	this := InterfacesIBeaconProxySetBeaconRequestContractParams{}
	return &this
}

// NewInterfacesIBeaconProxySetBeaconRequestContractParamsWithDefaults instantiates a new InterfacesIBeaconProxySetBeaconRequestContractParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesIBeaconProxySetBeaconRequestContractParamsWithDefaults() *InterfacesIBeaconProxySetBeaconRequestContractParams {
	this := InterfacesIBeaconProxySetBeaconRequestContractParams{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetVar0() string {
	if o == nil || IsNil(o.Var0) {
		var ret string
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetVar0Ok() (*string, bool) {
	if o == nil || IsNil(o.Var0) {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) HasVar0() bool {
	if o != nil && !IsNil(o.Var0) {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given string and assigns it to the Var0 field.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) SetVar0(v string) {
	o.Var0 = &v
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetVar1() string {
	if o == nil || IsNil(o.Var1) {
		var ret string
		return ret
	}
	return *o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetVar1Ok() (*string, bool) {
	if o == nil || IsNil(o.Var1) {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) HasVar1() bool {
	if o != nil && !IsNil(o.Var1) {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given string and assigns it to the Var1 field.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) SetVar1(v string) {
	o.Var1 = &v
}

// GetBeaconAddress returns the BeaconAddress field value if set, zero value otherwise.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetBeaconAddress() string {
	if o == nil || IsNil(o.BeaconAddress) {
		var ret string
		return ret
	}
	return *o.BeaconAddress
}

// GetBeaconAddressOk returns a tuple with the BeaconAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetBeaconAddressOk() (*string, bool) {
	if o == nil || IsNil(o.BeaconAddress) {
		return nil, false
	}
	return o.BeaconAddress, true
}

// HasBeaconAddress returns a boolean if a field has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) HasBeaconAddress() bool {
	if o != nil && !IsNil(o.BeaconAddress) {
		return true
	}

	return false
}

// SetBeaconAddress gets a reference to the given string and assigns it to the BeaconAddress field.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) SetBeaconAddress(v string) {
	o.BeaconAddress = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *InterfacesIBeaconProxySetBeaconRequestContractParams) SetData(v string) {
	o.Data = &v
}

func (o InterfacesIBeaconProxySetBeaconRequestContractParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesIBeaconProxySetBeaconRequestContractParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var0) {
		toSerialize["0"] = o.Var0
	}
	if !IsNil(o.Var1) {
		toSerialize["1"] = o.Var1
	}
	if !IsNil(o.BeaconAddress) {
		toSerialize["_beaconAddress"] = o.BeaconAddress
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableInterfacesIBeaconProxySetBeaconRequestContractParams struct {
	value *InterfacesIBeaconProxySetBeaconRequestContractParams
	isSet bool
}

func (v NullableInterfacesIBeaconProxySetBeaconRequestContractParams) Get() *InterfacesIBeaconProxySetBeaconRequestContractParams {
	return v.value
}

func (v *NullableInterfacesIBeaconProxySetBeaconRequestContractParams) Set(val *InterfacesIBeaconProxySetBeaconRequestContractParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesIBeaconProxySetBeaconRequestContractParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesIBeaconProxySetBeaconRequestContractParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesIBeaconProxySetBeaconRequestContractParams(val *InterfacesIBeaconProxySetBeaconRequestContractParams) *NullableInterfacesIBeaconProxySetBeaconRequestContractParams {
	return &NullableInterfacesIBeaconProxySetBeaconRequestContractParams{value: val, isSet: true}
}

func (v NullableInterfacesIBeaconProxySetBeaconRequestContractParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesIBeaconProxySetBeaconRequestContractParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


