/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams{}

// InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams struct for InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams
type InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams struct {
	// An ethereum address
	Var0 *string `json:"0,omitempty"`
	// A solidity uint256
	Var1 *string `json:"1,omitempty"`
	// An ethereum address
	Owner *string `json:"owner,omitempty"`
	// A solidity uint256
	Index *string `json:"index,omitempty"`
}

// NewInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams instantiates a new InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams() *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams {
	this := InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams{}
	return &this
}

// NewInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParamsWithDefaults instantiates a new InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParamsWithDefaults() *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams {
	this := InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetVar0() string {
	if o == nil || IsNil(o.Var0) {
		var ret string
		return ret
	}
	return *o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetVar0Ok() (*string, bool) {
	if o == nil || IsNil(o.Var0) {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) HasVar0() bool {
	if o != nil && !IsNil(o.Var0) {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given string and assigns it to the Var0 field.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) SetVar0(v string) {
	o.Var0 = &v
}

// GetVar1 returns the Var1 field value if set, zero value otherwise.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetVar1() string {
	if o == nil || IsNil(o.Var1) {
		var ret string
		return ret
	}
	return *o.Var1
}

// GetVar1Ok returns a tuple with the Var1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetVar1Ok() (*string, bool) {
	if o == nil || IsNil(o.Var1) {
		return nil, false
	}
	return o.Var1, true
}

// HasVar1 returns a boolean if a field has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) HasVar1() bool {
	if o != nil && !IsNil(o.Var1) {
		return true
	}

	return false
}

// SetVar1 gets a reference to the given string and assigns it to the Var1 field.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) SetVar1(v string) {
	o.Var1 = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) SetOwner(v string) {
	o.Owner = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetIndex() string {
	if o == nil || IsNil(o.Index) {
		var ret string
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) GetIndexOk() (*string, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given string and assigns it to the Index field.
func (o *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) SetIndex(v string) {
	o.Index = &v
}

func (o InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var0) {
		toSerialize["0"] = o.Var0
	}
	if !IsNil(o.Var1) {
		toSerialize["1"] = o.Var1
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams struct {
	value *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams
	isSet bool
}

func (v NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) Get() *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams {
	return v.value
}

func (v *NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) Set(val *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams(val *InterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) *NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams {
	return &NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams{value: val, isSet: true}
}

func (v NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesIERC721EnumerableTokenOfOwnerByIndexRequestContractParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


