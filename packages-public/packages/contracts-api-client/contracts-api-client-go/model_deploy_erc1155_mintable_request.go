/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DeployERC1155MintableRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeployERC1155MintableRequest{}

// DeployERC1155MintableRequest struct for DeployERC1155MintableRequest
type DeployERC1155MintableRequest struct {
	DeployParams DeployBeaconProxyRequestDeployParams `json:"deployParams"`
	ContractParams DeployERC1155MintableRequestContractParams `json:"contractParams"`
}

// NewDeployERC1155MintableRequest instantiates a new DeployERC1155MintableRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployERC1155MintableRequest(deployParams DeployBeaconProxyRequestDeployParams, contractParams DeployERC1155MintableRequestContractParams) *DeployERC1155MintableRequest {
	this := DeployERC1155MintableRequest{}
	this.DeployParams = deployParams
	this.ContractParams = contractParams
	return &this
}

// NewDeployERC1155MintableRequestWithDefaults instantiates a new DeployERC1155MintableRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeployERC1155MintableRequestWithDefaults() *DeployERC1155MintableRequest {
	this := DeployERC1155MintableRequest{}
	return &this
}

// GetDeployParams returns the DeployParams field value
func (o *DeployERC1155MintableRequest) GetDeployParams() DeployBeaconProxyRequestDeployParams {
	if o == nil {
		var ret DeployBeaconProxyRequestDeployParams
		return ret
	}

	return o.DeployParams
}

// GetDeployParamsOk returns a tuple with the DeployParams field value
// and a boolean to check if the value has been set.
func (o *DeployERC1155MintableRequest) GetDeployParamsOk() (*DeployBeaconProxyRequestDeployParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployParams, true
}

// SetDeployParams sets field value
func (o *DeployERC1155MintableRequest) SetDeployParams(v DeployBeaconProxyRequestDeployParams) {
	o.DeployParams = v
}

// GetContractParams returns the ContractParams field value
func (o *DeployERC1155MintableRequest) GetContractParams() DeployERC1155MintableRequestContractParams {
	if o == nil {
		var ret DeployERC1155MintableRequestContractParams
		return ret
	}

	return o.ContractParams
}

// GetContractParamsOk returns a tuple with the ContractParams field value
// and a boolean to check if the value has been set.
func (o *DeployERC1155MintableRequest) GetContractParamsOk() (*DeployERC1155MintableRequestContractParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractParams, true
}

// SetContractParams sets field value
func (o *DeployERC1155MintableRequest) SetContractParams(v DeployERC1155MintableRequestContractParams) {
	o.ContractParams = v
}

func (o DeployERC1155MintableRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeployERC1155MintableRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deployParams"] = o.DeployParams
	toSerialize["contractParams"] = o.ContractParams
	return toSerialize, nil
}

type NullableDeployERC1155MintableRequest struct {
	value *DeployERC1155MintableRequest
	isSet bool
}

func (v NullableDeployERC1155MintableRequest) Get() *DeployERC1155MintableRequest {
	return v.value
}

func (v *NullableDeployERC1155MintableRequest) Set(val *DeployERC1155MintableRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployERC1155MintableRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployERC1155MintableRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployERC1155MintableRequest(val *DeployERC1155MintableRequest) *NullableDeployERC1155MintableRequest {
	return &NullableDeployERC1155MintableRequest{value: val, isSet: true}
}

func (v NullableDeployERC1155MintableRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployERC1155MintableRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


