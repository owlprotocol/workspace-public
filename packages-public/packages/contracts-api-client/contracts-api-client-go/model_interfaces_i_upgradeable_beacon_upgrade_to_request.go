/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesIUpgradeableBeaconUpgradeToRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesIUpgradeableBeaconUpgradeToRequest{}

// InterfacesIUpgradeableBeaconUpgradeToRequest struct for InterfacesIUpgradeableBeaconUpgradeToRequest
type InterfacesIUpgradeableBeaconUpgradeToRequest struct {
	ContractParams InterfacesIUpgradeableBeaconUpgradeToRequestContractParams `json:"contractParams"`
}

// NewInterfacesIUpgradeableBeaconUpgradeToRequest instantiates a new InterfacesIUpgradeableBeaconUpgradeToRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesIUpgradeableBeaconUpgradeToRequest(contractParams InterfacesIUpgradeableBeaconUpgradeToRequestContractParams) *InterfacesIUpgradeableBeaconUpgradeToRequest {
	this := InterfacesIUpgradeableBeaconUpgradeToRequest{}
	this.ContractParams = contractParams
	return &this
}

// NewInterfacesIUpgradeableBeaconUpgradeToRequestWithDefaults instantiates a new InterfacesIUpgradeableBeaconUpgradeToRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesIUpgradeableBeaconUpgradeToRequestWithDefaults() *InterfacesIUpgradeableBeaconUpgradeToRequest {
	this := InterfacesIUpgradeableBeaconUpgradeToRequest{}
	return &this
}

// GetContractParams returns the ContractParams field value
func (o *InterfacesIUpgradeableBeaconUpgradeToRequest) GetContractParams() InterfacesIUpgradeableBeaconUpgradeToRequestContractParams {
	if o == nil {
		var ret InterfacesIUpgradeableBeaconUpgradeToRequestContractParams
		return ret
	}

	return o.ContractParams
}

// GetContractParamsOk returns a tuple with the ContractParams field value
// and a boolean to check if the value has been set.
func (o *InterfacesIUpgradeableBeaconUpgradeToRequest) GetContractParamsOk() (*InterfacesIUpgradeableBeaconUpgradeToRequestContractParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractParams, true
}

// SetContractParams sets field value
func (o *InterfacesIUpgradeableBeaconUpgradeToRequest) SetContractParams(v InterfacesIUpgradeableBeaconUpgradeToRequestContractParams) {
	o.ContractParams = v
}

func (o InterfacesIUpgradeableBeaconUpgradeToRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesIUpgradeableBeaconUpgradeToRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contractParams"] = o.ContractParams
	return toSerialize, nil
}

type NullableInterfacesIUpgradeableBeaconUpgradeToRequest struct {
	value *InterfacesIUpgradeableBeaconUpgradeToRequest
	isSet bool
}

func (v NullableInterfacesIUpgradeableBeaconUpgradeToRequest) Get() *InterfacesIUpgradeableBeaconUpgradeToRequest {
	return v.value
}

func (v *NullableInterfacesIUpgradeableBeaconUpgradeToRequest) Set(val *InterfacesIUpgradeableBeaconUpgradeToRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesIUpgradeableBeaconUpgradeToRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesIUpgradeableBeaconUpgradeToRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesIUpgradeableBeaconUpgradeToRequest(val *InterfacesIUpgradeableBeaconUpgradeToRequest) *NullableInterfacesIUpgradeableBeaconUpgradeToRequest {
	return &NullableInterfacesIUpgradeableBeaconUpgradeToRequest{value: val, isSet: true}
}

func (v NullableInterfacesIUpgradeableBeaconUpgradeToRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesIUpgradeableBeaconUpgradeToRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


