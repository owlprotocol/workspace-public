/*
Owl Contract Api

Specification for our API focused on contract interactions

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the InterfacesITokenDnaGetDnaBatchRequestContractParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterfacesITokenDnaGetDnaBatchRequestContractParams{}

// InterfacesITokenDnaGetDnaBatchRequestContractParams struct for InterfacesITokenDnaGetDnaBatchRequestContractParams
type InterfacesITokenDnaGetDnaBatchRequestContractParams struct {
	Var0 []string `json:"0,omitempty"`
	TokenId []string `json:"tokenId,omitempty"`
}

// NewInterfacesITokenDnaGetDnaBatchRequestContractParams instantiates a new InterfacesITokenDnaGetDnaBatchRequestContractParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterfacesITokenDnaGetDnaBatchRequestContractParams() *InterfacesITokenDnaGetDnaBatchRequestContractParams {
	this := InterfacesITokenDnaGetDnaBatchRequestContractParams{}
	return &this
}

// NewInterfacesITokenDnaGetDnaBatchRequestContractParamsWithDefaults instantiates a new InterfacesITokenDnaGetDnaBatchRequestContractParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterfacesITokenDnaGetDnaBatchRequestContractParamsWithDefaults() *InterfacesITokenDnaGetDnaBatchRequestContractParams {
	this := InterfacesITokenDnaGetDnaBatchRequestContractParams{}
	return &this
}

// GetVar0 returns the Var0 field value if set, zero value otherwise.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) GetVar0() []string {
	if o == nil || IsNil(o.Var0) {
		var ret []string
		return ret
	}
	return o.Var0
}

// GetVar0Ok returns a tuple with the Var0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) GetVar0Ok() ([]string, bool) {
	if o == nil || IsNil(o.Var0) {
		return nil, false
	}
	return o.Var0, true
}

// HasVar0 returns a boolean if a field has been set.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) HasVar0() bool {
	if o != nil && !IsNil(o.Var0) {
		return true
	}

	return false
}

// SetVar0 gets a reference to the given []string and assigns it to the Var0 field.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) SetVar0(v []string) {
	o.Var0 = v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) GetTokenId() []string {
	if o == nil || IsNil(o.TokenId) {
		var ret []string
		return ret
	}
	return o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) GetTokenIdOk() ([]string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given []string and assigns it to the TokenId field.
func (o *InterfacesITokenDnaGetDnaBatchRequestContractParams) SetTokenId(v []string) {
	o.TokenId = v
}

func (o InterfacesITokenDnaGetDnaBatchRequestContractParams) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterfacesITokenDnaGetDnaBatchRequestContractParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Var0) {
		toSerialize["0"] = o.Var0
	}
	if !IsNil(o.TokenId) {
		toSerialize["tokenId"] = o.TokenId
	}
	return toSerialize, nil
}

type NullableInterfacesITokenDnaGetDnaBatchRequestContractParams struct {
	value *InterfacesITokenDnaGetDnaBatchRequestContractParams
	isSet bool
}

func (v NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) Get() *InterfacesITokenDnaGetDnaBatchRequestContractParams {
	return v.value
}

func (v *NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) Set(val *InterfacesITokenDnaGetDnaBatchRequestContractParams) {
	v.value = val
	v.isSet = true
}

func (v NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) IsSet() bool {
	return v.isSet
}

func (v *NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterfacesITokenDnaGetDnaBatchRequestContractParams(val *InterfacesITokenDnaGetDnaBatchRequestContractParams) *NullableInterfacesITokenDnaGetDnaBatchRequestContractParams {
	return &NullableInterfacesITokenDnaGetDnaBatchRequestContractParams{value: val, isSet: true}
}

func (v NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterfacesITokenDnaGetDnaBatchRequestContractParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


