/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DeployBeaconProxyRequestDeployParams {
    /// An ethereum address
    #[serde(rename = "msgSender", skip_serializing_if = "Option::is_none")]
    pub msg_sender: Option<String>,
    /// Salt parameter string to deploy different contracts with identical parameteres (default: 1)
    #[serde(rename = "salt", skip_serializing_if = "Option::is_none")]
    pub salt: Option<String>,
    #[serde(rename = "deploymentMethod")]
    pub deployment_method: DeploymentMethod,
    /// The address of the beacon, if used in the deployment method
    #[serde(rename = "beaconAddress", skip_serializing_if = "Option::is_none")]
    pub beacon_address: Option<String>,
    /// The admin address of the beacon, if a new beacon is deployed
    #[serde(rename = "beaonAdmin", skip_serializing_if = "Option::is_none")]
    pub beaon_admin: Option<String>,
}

impl DeployBeaconProxyRequestDeployParams {
    pub fn new(deployment_method: DeploymentMethod) -> DeployBeaconProxyRequestDeployParams {
        DeployBeaconProxyRequestDeployParams {
            msg_sender: None,
            salt: None,
            deployment_method,
            beacon_address: None,
            beaon_admin: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DeploymentMethod {
    #[serde(rename = "DETERMINISTIC")]
    Deterministic,
    #[serde(rename = "ERC1167")]
    Erc1167,
    #[serde(rename = "BEACON_OWL")]
    BeaconOwl,
    #[serde(rename = "BEACON_EXISTING")]
    BeaconExisting,
    #[serde(rename = "BEACON_NEW")]
    BeaconNew,
}

impl Default for DeploymentMethod {
    fn default() -> DeploymentMethod {
        Self::Deterministic
    }
}

