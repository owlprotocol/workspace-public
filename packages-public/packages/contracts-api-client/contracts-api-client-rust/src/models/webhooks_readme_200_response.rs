/*
 * Owl Contract Api
 *
 * Specification for our API focused on contract interactions
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct WebhooksReadme200Response {
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "apiKey")]
    pub api_key: String,
    #[serde(rename = "dfnsAddress", skip_serializing_if = "Option::is_none")]
    pub dfns_address: Option<String>,
    #[serde(rename = "dfnsId", skip_serializing_if = "Option::is_none")]
    pub dfns_id: Option<String>,
    #[serde(rename = "dfnsStatus", skip_serializing_if = "Option::is_none")]
    pub dfns_status: Option<String>,
    #[serde(rename = "gnosisTxHash", skip_serializing_if = "Option::is_none")]
    pub gnosis_tx_hash: Option<String>,
    #[serde(rename = "gnosisAddress", skip_serializing_if = "Option::is_none")]
    pub gnosis_address: Option<String>,
    #[serde(rename = "topupTotals", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub topup_totals: Option<Option<serde_json::Value>>,
    #[serde(rename = "Authorization")]
    pub authorization: String,
}

impl WebhooksReadme200Response {
    pub fn new(email: String, api_key: String, authorization: String) -> WebhooksReadme200Response {
        WebhooksReadme200Response {
            email,
            api_key,
            dfns_address: None,
            dfns_id: None,
            dfns_status: None,
            gnosis_tx_hash: None,
            gnosis_address: None,
            topup_totals: None,
            authorization,
        }
    }
}


