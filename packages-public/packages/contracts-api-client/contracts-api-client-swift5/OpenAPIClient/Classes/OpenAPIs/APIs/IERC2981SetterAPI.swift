//
// IERC2981SetterAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class IERC2981SetterAPI {

    /**
     IERC2981Setter.setDefaultRoyalty
     
     - parameter networkId: (path) The network id 
     - parameter address: (path) An ethereum address 
     - parameter interfacesIERC2981SetterSetDefaultRoyaltyRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func interfacesIERC2981SetterSetDefaultRoyalty(networkId: String, address: String, interfacesIERC2981SetterSetDefaultRoyaltyRequest: InterfacesIERC2981SetterSetDefaultRoyaltyRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InterfacesIERC2981SetterSetDefaultRoyalty200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return interfacesIERC2981SetterSetDefaultRoyaltyWithRequestBuilder(networkId: networkId, address: address, interfacesIERC2981SetterSetDefaultRoyaltyRequest: interfacesIERC2981SetterSetDefaultRoyaltyRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     IERC2981Setter.setDefaultRoyalty
     - POST /{networkId}/interface/IERC2981Setter/write/{address}/setDefaultRoyalty
     - Write `setDefaultRoyalty(receiver,feeNumerator)` on an instance of `IERC2981Setter`
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: Authorization
     - parameter networkId: (path) The network id 
     - parameter address: (path) An ethereum address 
     - parameter interfacesIERC2981SetterSetDefaultRoyaltyRequest: (body)  
     - returns: RequestBuilder<InterfacesIERC2981SetterSetDefaultRoyalty200Response> 
     */
    open class func interfacesIERC2981SetterSetDefaultRoyaltyWithRequestBuilder(networkId: String, address: String, interfacesIERC2981SetterSetDefaultRoyaltyRequest: InterfacesIERC2981SetterSetDefaultRoyaltyRequest) -> RequestBuilder<InterfacesIERC2981SetterSetDefaultRoyalty200Response> {
        var localVariablePath = "/{networkId}/interface/IERC2981Setter/write/{address}/setDefaultRoyalty"
        let networkIdPreEscape = "\(APIHelper.mapValueToPathItem(networkId))"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let addressPreEscape = "\(APIHelper.mapValueToPathItem(address))"
        let addressPostEscape = addressPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{address}", with: addressPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: interfacesIERC2981SetterSetDefaultRoyaltyRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InterfacesIERC2981SetterSetDefaultRoyalty200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     IERC2981Setter.setTokenRoyalty
     
     - parameter networkId: (path) The network id 
     - parameter address: (path) An ethereum address 
     - parameter interfacesIERC2981SetterSetTokenRoyaltyRequest: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func interfacesIERC2981SetterSetTokenRoyalty(networkId: String, address: String, interfacesIERC2981SetterSetTokenRoyaltyRequest: InterfacesIERC2981SetterSetTokenRoyaltyRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InterfacesIERC2981SetterSetTokenRoyalty200Response?, _ error: Error?) -> Void)) -> RequestTask {
        return interfacesIERC2981SetterSetTokenRoyaltyWithRequestBuilder(networkId: networkId, address: address, interfacesIERC2981SetterSetTokenRoyaltyRequest: interfacesIERC2981SetterSetTokenRoyaltyRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     IERC2981Setter.setTokenRoyalty
     - POST /{networkId}/interface/IERC2981Setter/write/{address}/setTokenRoyalty
     - Write `setTokenRoyalty(tokenId,receiver,feeNumerator)` on an instance of `IERC2981Setter`
     - API Key:
       - type: apiKey x-api-key (HEADER)
       - name: Authorization
     - parameter networkId: (path) The network id 
     - parameter address: (path) An ethereum address 
     - parameter interfacesIERC2981SetterSetTokenRoyaltyRequest: (body)  
     - returns: RequestBuilder<InterfacesIERC2981SetterSetTokenRoyalty200Response> 
     */
    open class func interfacesIERC2981SetterSetTokenRoyaltyWithRequestBuilder(networkId: String, address: String, interfacesIERC2981SetterSetTokenRoyaltyRequest: InterfacesIERC2981SetterSetTokenRoyaltyRequest) -> RequestBuilder<InterfacesIERC2981SetterSetTokenRoyalty200Response> {
        var localVariablePath = "/{networkId}/interface/IERC2981Setter/write/{address}/setTokenRoyalty"
        let networkIdPreEscape = "\(APIHelper.mapValueToPathItem(networkId))"
        let networkIdPostEscape = networkIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{networkId}", with: networkIdPostEscape, options: .literal, range: nil)
        let addressPreEscape = "\(APIHelper.mapValueToPathItem(address))"
        let addressPostEscape = addressPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{address}", with: addressPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: interfacesIERC2981SetterSetTokenRoyaltyRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InterfacesIERC2981SetterSetTokenRoyalty200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
