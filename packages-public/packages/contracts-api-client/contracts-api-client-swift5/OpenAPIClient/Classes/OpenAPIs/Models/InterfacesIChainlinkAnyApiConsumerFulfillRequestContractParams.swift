//
// InterfacesIChainlinkAnyApiConsumerFulfillRequestContractParams.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct InterfacesIChainlinkAnyApiConsumerFulfillRequestContractParams: Codable, JSONEncodable, Hashable {

    /** An arbitrary length byte array */
    public var _0: String?
    /** An arbitrary length byte array */
    public var _1: String?
    /** An arbitrary length byte array */
    public var fulfillPrefixData: String?
    /** An arbitrary length byte array */
    public var fulfillResponseData: String?

    public init(_0: String? = nil, _1: String? = nil, fulfillPrefixData: String? = nil, fulfillResponseData: String? = nil) {
        self._0 = _0
        self._1 = _1
        self.fulfillPrefixData = fulfillPrefixData
        self.fulfillResponseData = fulfillResponseData
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _0 = "0"
        case _1 = "1"
        case fulfillPrefixData
        case fulfillResponseData
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_0, forKey: ._0)
        try container.encodeIfPresent(_1, forKey: ._1)
        try container.encodeIfPresent(fulfillPrefixData, forKey: .fulfillPrefixData)
        try container.encodeIfPresent(fulfillResponseData, forKey: .fulfillResponseData)
    }
}

