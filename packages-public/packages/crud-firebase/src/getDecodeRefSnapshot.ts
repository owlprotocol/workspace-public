import { AsEmptyRecord, Prettify } from "@owlprotocol/utils/types";
import type { DocumentData, FirestoreSDK, QueryDocumentSnapshot } from "./document.js";
import { ResourceDataValidators } from "./resource.js";

/**
 * Decode a document ref
 * @template ResourceData Resource data
 * @template ResourceId Resource id params (some params may be optional if can be autogenerated)
 * @template CollectionId Resource parent collection id
 * @template ResourceDataEncoded Resource encoded data passed to `decodeData`, defaults to ResourceData
 * @template Resource Full returned resource CollectionId & ResourceId & ResourceData
 * @param validators
 * @returns
 */
export function getDecodeRefSnapshot<
    ResourceData extends Record<string, any>,
    ResourceId extends Record<string, any>,
    CollectionId extends Record<string, any> = Record<string, never>,
    ResourceDataEncoded extends DocumentData = ResourceData,
    Resource extends Prettify<AsEmptyRecord<CollectionId> & ResourceId & ResourceData> = Prettify<
        AsEmptyRecord<CollectionId> & ResourceId & ResourceData
    >,
>(
    validators: Pick<
        ResourceDataValidators<ResourceData, ResourceId, CollectionId, ResourceData, ResourceDataEncoded>,
        "decodeId" | "decodeData" | "decodeParentDocId"
    >,
) {
    const { decodeId, decodeData, decodeParentDocId } = validators ?? {};

    return function decodeRefSnapshot(refSnapshot: QueryDocumentSnapshot<FirestoreSDK, ResourceDataEncoded>): Resource {
        const parentDoc = refSnapshot.ref.parent.parent;
        if (!parentDoc) {
            if (decodeParentDocId) {
                throw new Error(`${refSnapshot.ref.path} is not a subcollection but decodeCollectionDocRef defined`);
            } else if (decodeParentDocId) {
                throw new Error(`${refSnapshot.ref.path} is not a subcollection but decodeCollectionDocId defined`);
            }
        }

        return {
            //Decode document data
            ...(decodeData ? decodeData(refSnapshot.data()) : refSnapshot.data()),
            //Decode document id
            ...decodeId(refSnapshot.id),
            //Decode collection path
            //TODO: Add decodeCollectionPath
            ...(decodeParentDocId ? decodeParentDocId(parentDoc!.id) : {}),
        } as Resource;
    };
}
