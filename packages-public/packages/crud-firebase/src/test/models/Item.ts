/** Item with single autogenerated uuid */
export interface ItemId {
    readonly id?: string;
}

export interface ItemData {
    readonly name: string;
    readonly value: string;
    readonly count: number;
    readonly owner: string;
    readonly map: {
        [k: string]: string;
    };
    readonly objectArray: Array<Record<string, any>>;
}

export type Item = Required<ItemId> & ItemData;

/** ItemComposite with composite id */
export interface ItemCompositeId {
    readonly idPrefix: string;
    readonly idSuffix: string;
}

export type ItemComposite = Required<ItemCompositeId> & ItemData;
